using HECSFramework.Serialize;using System.Collections.Generic;namespace HECSFramework.Unity{	public static partial class AnimatorManager	{		public static AnimatorHelper Ellen;		public static AnimatorHelper EllenCutsceneImage;		public static AnimatorHelper EllenDeathEffect;		public static AnimatorHelper EllenHurtEffect;		public static AnimatorHelper EllenPush;		public static AnimatorHelper Chomper;		public static AnimatorHelper Gunner;		public static AnimatorHelper GunnerBeamEffect;		public static AnimatorHelper GunnerIntroCutsceneCharacter;		public static AnimatorHelper GunnerIntroCutsceneDoor;		public static AnimatorHelper Spitter;		public static AnimatorHelper Bridge;		public static AnimatorHelper DoorSprite;		public static AnimatorHelper Key;		public static AnimatorHelper PushableBoxSwitch;		public static AnimatorHelper Teleporter;		public static AnimatorHelper GunnerUIHealth;		public static AnimatorHelper GunnerUIShield;		public static AnimatorHelper DialogueCanvas;		public static AnimatorHelper HealthIcon;		public static AnimatorHelper KeyIcon;		public static AnimatorHelper CloseButton;		public static AnimatorHelper GameOverEllen;		public static AnimatorHelper GameOverText;		public static AnimatorHelper LoadingCanvas;		public static AnimatorHelper StartButton;		public static AnimatorHelper StartLogo;		public static AnimatorHelper StartMenuCanvas;		public static AnimatorHelper UIButton;		public static AnimatorHelper UICanvas;		public static AnimatorHelper SpitterDeath_05;		public static AnimatorHelper TestController;		static AnimatorManager()		{			InitEllen();			InitEllenCutsceneImage();			InitEllenDeathEffect();			InitEllenHurtEffect();			InitEllenPush();			InitChomper();			InitGunner();			InitGunnerBeamEffect();			InitGunnerIntroCutsceneCharacter();			InitGunnerIntroCutsceneDoor();			InitSpitter();			InitBridge();			InitDoorSprite();			InitKey();			InitPushableBoxSwitch();			InitTeleporter();			InitGunnerUIHealth();			InitGunnerUIShield();			InitDialogueCanvas();			InitHealthIcon();			InitKeyIcon();			InitCloseButton();			InitGameOverEllen();			InitGameOverText();			InitLoadingCanvas();			InitStartButton();			InitStartLogo();			InitStartMenuCanvas();			InitUIButton();			InitUICanvas();			InitSpitterDeath_05();			InitTestController();		}		private static void InitEllen()		{			var dictionaryEllen = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{-2032366093, new BoolParameterResolver() },					{862969536, new BoolParameterResolver() },					{-904352459, new BoolParameterResolver() },					{924827384, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{					{-1118621987, new FloatParameterResolver() },					{-1148172834, new FloatParameterResolver() },					{1991314158, new FloatParameterResolver() },				},			};			animStateProviders.Add("Ellen", resolver);			Ellen = new AnimatorHelper(dictionaryEllen);			animhelpers.Add("Ellen", Ellen);		}		private static void InitEllenCutsceneImage()		{			var dictionaryEllenCutsceneImage = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("EllenCutsceneImage", resolver);			EllenCutsceneImage = new AnimatorHelper(dictionaryEllenCutsceneImage);			animhelpers.Add("EllenCutsceneImage", EllenCutsceneImage);		}		private static void InitEllenDeathEffect()		{			var dictionaryEllenDeathEffect = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("EllenDeathEffect", resolver);			EllenDeathEffect = new AnimatorHelper(dictionaryEllenDeathEffect);			animhelpers.Add("EllenDeathEffect", EllenDeathEffect);		}		private static void InitEllenHurtEffect()		{			var dictionaryEllenHurtEffect = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("EllenHurtEffect", resolver);			EllenHurtEffect = new AnimatorHelper(dictionaryEllenHurtEffect);			animhelpers.Add("EllenHurtEffect", EllenHurtEffect);		}		private static void InitEllenPush()		{			var dictionaryEllenPush = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("EllenPush", resolver);			EllenPush = new AnimatorHelper(dictionaryEllenPush);			animhelpers.Add("EllenPush", EllenPush);		}		private static void InitChomper()		{			var dictionaryChomper = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{862969536, new BoolParameterResolver() },					{237393061, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Chomper", resolver);			Chomper = new AnimatorHelper(dictionaryChomper);			animhelpers.Add("Chomper", Chomper);		}		private static void InitGunner()		{			var dictionaryGunner = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Gunner", resolver);			Gunner = new AnimatorHelper(dictionaryGunner);			animhelpers.Add("Gunner", Gunner);		}		private static void InitGunnerBeamEffect()		{			var dictionaryGunnerBeamEffect = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GunnerBeamEffect", resolver);			GunnerBeamEffect = new AnimatorHelper(dictionaryGunnerBeamEffect);			animhelpers.Add("GunnerBeamEffect", GunnerBeamEffect);		}		private static void InitGunnerIntroCutsceneCharacter()		{			var dictionaryGunnerIntroCutsceneCharacter = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GunnerIntroCutsceneCharacter", resolver);			GunnerIntroCutsceneCharacter = new AnimatorHelper(dictionaryGunnerIntroCutsceneCharacter);			animhelpers.Add("GunnerIntroCutsceneCharacter", GunnerIntroCutsceneCharacter);		}		private static void InitGunnerIntroCutsceneDoor()		{			var dictionaryGunnerIntroCutsceneDoor = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GunnerIntroCutsceneDoor", resolver);			GunnerIntroCutsceneDoor = new AnimatorHelper(dictionaryGunnerIntroCutsceneDoor);			animhelpers.Add("GunnerIntroCutsceneDoor", GunnerIntroCutsceneDoor);		}		private static void InitSpitter()		{			var dictionarySpitter = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Spitter", resolver);			Spitter = new AnimatorHelper(dictionarySpitter);			animhelpers.Add("Spitter", Spitter);		}		private static void InitBridge()		{			var dictionaryBridge = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Bridge", resolver);			Bridge = new AnimatorHelper(dictionaryBridge);			animhelpers.Add("Bridge", Bridge);		}		private static void InitDoorSprite()		{			var dictionaryDoorSprite = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("DoorSprite", resolver);			DoorSprite = new AnimatorHelper(dictionaryDoorSprite);			animhelpers.Add("DoorSprite", DoorSprite);		}		private static void InitKey()		{			var dictionaryKey = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Key", resolver);			Key = new AnimatorHelper(dictionaryKey);			animhelpers.Add("Key", Key);		}		private static void InitPushableBoxSwitch()		{			var dictionaryPushableBoxSwitch = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("PushableBoxSwitch", resolver);			PushableBoxSwitch = new AnimatorHelper(dictionaryPushableBoxSwitch);			animhelpers.Add("PushableBoxSwitch", PushableBoxSwitch);		}		private static void InitTeleporter()		{			var dictionaryTeleporter = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("Teleporter", resolver);			Teleporter = new AnimatorHelper(dictionaryTeleporter);			animhelpers.Add("Teleporter", Teleporter);		}		private static void InitGunnerUIHealth()		{			var dictionaryGunnerUIHealth = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GunnerUIHealth", resolver);			GunnerUIHealth = new AnimatorHelper(dictionaryGunnerUIHealth);			animhelpers.Add("GunnerUIHealth", GunnerUIHealth);		}		private static void InitGunnerUIShield()		{			var dictionaryGunnerUIShield = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GunnerUIShield", resolver);			GunnerUIShield = new AnimatorHelper(dictionaryGunnerUIShield);			animhelpers.Add("GunnerUIShield", GunnerUIShield);		}		private static void InitDialogueCanvas()		{			var dictionaryDialogueCanvas = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{1286797620, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("DialogueCanvas", resolver);			DialogueCanvas = new AnimatorHelper(dictionaryDialogueCanvas);			animhelpers.Add("DialogueCanvas", DialogueCanvas);		}		private static void InitHealthIcon()		{			var dictionaryHealthIcon = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{1286797620, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("HealthIcon", resolver);			HealthIcon = new AnimatorHelper(dictionaryHealthIcon);			animhelpers.Add("HealthIcon", HealthIcon);		}		private static void InitKeyIcon()		{			var dictionaryKeyIcon = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{					{1286797620, new BoolParameterResolver() },				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("KeyIcon", resolver);			KeyIcon = new AnimatorHelper(dictionaryKeyIcon);			animhelpers.Add("KeyIcon", KeyIcon);		}		private static void InitCloseButton()		{			var dictionaryCloseButton = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("CloseButton", resolver);			CloseButton = new AnimatorHelper(dictionaryCloseButton);			animhelpers.Add("CloseButton", CloseButton);		}		private static void InitGameOverEllen()		{			var dictionaryGameOverEllen = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GameOverEllen", resolver);			GameOverEllen = new AnimatorHelper(dictionaryGameOverEllen);			animhelpers.Add("GameOverEllen", GameOverEllen);		}		private static void InitGameOverText()		{			var dictionaryGameOverText = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("GameOverText", resolver);			GameOverText = new AnimatorHelper(dictionaryGameOverText);			animhelpers.Add("GameOverText", GameOverText);		}		private static void InitLoadingCanvas()		{			var dictionaryLoadingCanvas = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("LoadingCanvas", resolver);			LoadingCanvas = new AnimatorHelper(dictionaryLoadingCanvas);			animhelpers.Add("LoadingCanvas", LoadingCanvas);		}		private static void InitStartButton()		{			var dictionaryStartButton = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("StartButton", resolver);			StartButton = new AnimatorHelper(dictionaryStartButton);			animhelpers.Add("StartButton", StartButton);		}		private static void InitStartLogo()		{			var dictionaryStartLogo = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("StartLogo", resolver);			StartLogo = new AnimatorHelper(dictionaryStartLogo);			animhelpers.Add("StartLogo", StartLogo);		}		private static void InitStartMenuCanvas()		{			var dictionaryStartMenuCanvas = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("StartMenuCanvas", resolver);			StartMenuCanvas = new AnimatorHelper(dictionaryStartMenuCanvas);			animhelpers.Add("StartMenuCanvas", StartMenuCanvas);		}		private static void InitUIButton()		{			var dictionaryUIButton = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("UIButton", resolver);			UIButton = new AnimatorHelper(dictionaryUIButton);			animhelpers.Add("UIButton", UIButton);		}		private static void InitUICanvas()		{			var dictionaryUICanvas = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("UICanvas", resolver);			UICanvas = new AnimatorHelper(dictionaryUICanvas);			animhelpers.Add("UICanvas", UICanvas);		}		private static void InitSpitterDeath_05()		{			var dictionarySpitterDeath_05 = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("SpitterDeath_05", resolver);			SpitterDeath_05 = new AnimatorHelper(dictionarySpitterDeath_05);			animhelpers.Add("SpitterDeath_05", SpitterDeath_05);		}		private static void InitTestController()		{			var dictionaryTestController = new Dictionary<int, string>()			{			};			var resolver = new AnimatorStateResolver			{				BoolStates = new Dictionary<int,BoolParameterResolver>()				{				},				IntStates = new Dictionary<int,IntParameterResolver>()				{				},				FloatStates = new Dictionary<int,FloatParameterResolver>()				{				},			};			animStateProviders.Add("TestController", resolver);			TestController = new AnimatorHelper(dictionaryTestController);			animhelpers.Add("TestController", TestController);		}	}}