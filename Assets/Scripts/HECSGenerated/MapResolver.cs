using Components;using HECSFramework.Core;using MessagePack.Resolvers;using MessagePack;[Union(0, typeof(AnimationComponentResolver))][Union(1, typeof(AttackComponentResolver))][Union(2, typeof(CameraComponentResolver))][Union(3, typeof(CameraProviderComponentResolver))][Union(4, typeof(CharacterComponentResolver))][Union(5, typeof(CharacterTagComponentResolver))][Union(6, typeof(DamageComponentResolver))][Union(7, typeof(DefaultCharacterHolderComponentResolver))][Union(8, typeof(EnemyComponentResolver))][Union(9, typeof(EnemyTagComponentResolver))][Union(10, typeof(GroundCheckComponentResolver))][Union(11, typeof(HealthComponentResolver))][Union(12, typeof(MovementComponentResolver))][Union(13, typeof(MoveVectorComponentResolver))][Union(14, typeof(MovingPlatformComponentResolver))][Union(15, typeof(Rigidbody2DProviderComponentResolver))][Union(16, typeof(SpawnPointTagComponentResolver))][Union(17, typeof(SpriteRendererProviderComponentResolver))][Union(18, typeof(VelocityComponentResolver))][Union(19, typeof(SavePositionComponentResolver))][Union(20, typeof(ViewReferenceComponentResolver))][Union(21, typeof(ActionsHolderComponentResolver))][Union(22, typeof(AbilityOwnerComponentResolver))][Union(23, typeof(AbilityPredicateComponentResolver))][Union(24, typeof(ActorContainerIDResolver))][Union(25, typeof(ActorProviderComponentResolver))][Union(26, typeof(AppVersionComponentResolver))][Union(27, typeof(PoolableTagComponentResolver))][Union(28, typeof(PredicatesComponentResolver))][Union(29, typeof(AnimatorStateComponentResolver))][Union(30, typeof(CountersHolderComponentResolver))][Union(31, typeof(TestSerializationComponentResolver))][Union(32, typeof(TransformComponentResolver))][Union(33, typeof(AIStrategyComponentResolver))][Union(34, typeof(WaitStateComponentResolver))][Union(35, typeof(CacheCounterValuesComponentResolver))][Union(36, typeof(UntilSuccessStrategyNodeComponentResolver))][Union(37, typeof(AbilitiesHolderComponentResolver))][Union(38, typeof(AdditionalAbilityIndexComponentResolver))][Union(39, typeof(AfterLifeCompleteTagComponentResolver))][Union(40, typeof(AfterLifeTagComponentResolver))][Union(41, typeof(GameLogicTagComponentResolver))][Union(42, typeof(InputActionsComponentResolver))][Union(43, typeof(InputListenerTagComponentResolver))][Union(44, typeof(ItemTagComponentResolver))][Union(45, typeof(NavMeshAgentComponentResolver))][Union(46, typeof(NetworkEntityTagComponentResolver))][Union(47, typeof(PoolableViewsProviderComponentResolver))][Union(48, typeof(TimeProviderComponentResolver))][Union(49, typeof(UIGroupTagComponentResolver))][Union(50, typeof(UIViewReferenceComponentResolver))][Union(51, typeof(UnityRectTransformComponentResolver))][Union(52, typeof(UnityTransformComponentResolver))][Union(53, typeof(ViewDestructionDelayedComponentResolver))][Union(54, typeof(ViewReferenceGameObjectComponentResolver))][Union(55, typeof(SoundVolumeComponentResolver))][Union(56, typeof(CheckTwoComponentResolver))][Union(57, typeof(TestReactComponentResolver))][Union(58, typeof(AbilityTagComponentResolver))][Union(59, typeof(PassiveAbilityTagResolver))][Union(60, typeof(ScenarioAnimationComponentResolver))][Union(61, typeof(StateContextComponentResolver))][Union(62, typeof(StateDataComponentResolver))][Union(63, typeof(StateInfoComponentResolver))][Union(64, typeof(AnimationCheckOutsHolderComponentResolver))][Union(65, typeof(OverrideAnimatorComponentResolver))][Union(66, typeof(SetupAfterViewTagComponentResolver))][Union(67, typeof(ViewReadyTagComponentResolver))][Union(68, typeof(RadiusComponentResolver))][Union(69, typeof(StickTagComponentResolver))][Union(70, typeof(AdditionalCanvasTagComponentResolver))][Union(71, typeof(MainCanvasTagComponentResolver))][Union(72, typeof(UITagComponentResolver))][Union(73, typeof(TestComponentResolver))][Union(74, typeof(TestWorldSingleComponentResolver))]public partial interface IData { }namespace HECSFramework.Core{	public partial class ResolversMap	{		public ResolversMap()		{			GetComponentContainerFunc = GetContainerForComponentFuncProvider;			ProcessResolverContainer = ProcessResolverContainerRealisation;			GetComponentFromContainer = GetComponentFromContainerFuncRealisation;			InitPartialCommandResolvers();			InitCustomResolvers();			JSONModuleInit();		}		partial void JSONModuleInit();		partial void InitCustomResolvers();		partial void LoadDataFromContainerSwitch(ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.Type)			{				case 0:					ProcessComponents(ref dataContainerForResolving, worldIndex);					break;			}		}		private ResolverDataContainer GetContainerForComponentFuncProvider<T>(T component) where T: IComponent		{			switch (component.GetTypeHashCode)			{				case 891356082:					var animationcomponentresolver = component as AnimationComponent;					var AnimationComponentData = new AnimationComponentResolver().In(ref animationcomponentresolver);					return PackComponentToContainer(component, AnimationComponentData);				case -596259457:					var attackcomponentresolver = component as AttackComponent;					var AttackComponentData = new AttackComponentResolver().In(ref attackcomponentresolver);					return PackComponentToContainer(component, AttackComponentData);				case -611987101:					var cameracomponentresolver = component as CameraComponent;					var CameraComponentData = new CameraComponentResolver().In(ref cameracomponentresolver);					return PackComponentToContainer(component, CameraComponentData);				case -1555258315:					var cameraprovidercomponentresolver = component as CameraProviderComponent;					var CameraProviderComponentData = new CameraProviderComponentResolver().In(ref cameraprovidercomponentresolver);					return PackComponentToContainer(component, CameraProviderComponentData);				case 889396852:					var charactercomponentresolver = component as CharacterComponent;					var CharacterComponentData = new CharacterComponentResolver().In(ref charactercomponentresolver);					return PackComponentToContainer(component, CharacterComponentData);				case 37992040:					var charactertagcomponentresolver = component as CharacterTagComponent;					var CharacterTagComponentData = new CharacterTagComponentResolver().In(ref charactertagcomponentresolver);					return PackComponentToContainer(component, CharacterTagComponentData);				case -623718192:					var damagecomponentresolver = component as DamageComponent;					var DamageComponentData = new DamageComponentResolver().In(ref damagecomponentresolver);					return PackComponentToContainer(component, DamageComponentData);				case -17579568:					var defaultcharacterholdercomponentresolver = component as DefaultCharacterHolderComponent;					var DefaultCharacterHolderComponentData = new DefaultCharacterHolderComponentResolver().In(ref defaultcharacterholdercomponentresolver);					return PackComponentToContainer(component, DefaultCharacterHolderComponentData);				case -2131779644:					var enemycomponentresolver = component as EnemyComponent;					var EnemyComponentData = new EnemyComponentResolver().In(ref enemycomponentresolver);					return PackComponentToContainer(component, EnemyComponentData);				case -1416715012:					var enemytagcomponentresolver = component as EnemyTagComponent;					var EnemyTagComponentData = new EnemyTagComponentResolver().In(ref enemytagcomponentresolver);					return PackComponentToContainer(component, EnemyTagComponentData);				case 1389512473:					var groundcheckcomponentresolver = component as GroundCheckComponent;					var GroundCheckComponentData = new GroundCheckComponentResolver().In(ref groundcheckcomponentresolver);					return PackComponentToContainer(component, GroundCheckComponentData);				case -589508998:					var healthcomponentresolver = component as HealthComponent;					var HealthComponentData = new HealthComponentResolver().In(ref healthcomponentresolver);					return PackComponentToContainer(component, HealthComponentData);				case -1302026474:					var movementcomponentresolver = component as MovementComponent;					var MovementComponentData = new MovementComponentResolver().In(ref movementcomponentresolver);					return PackComponentToContainer(component, MovementComponentData);				case -1036563749:					var movevectorcomponentresolver = component as MoveVectorComponent;					var MoveVectorComponentData = new MoveVectorComponentResolver().In(ref movevectorcomponentresolver);					return PackComponentToContainer(component, MoveVectorComponentData);				case -1531631635:					var movingplatformcomponentresolver = component as MovingPlatformComponent;					var MovingPlatformComponentData = new MovingPlatformComponentResolver().In(ref movingplatformcomponentresolver);					return PackComponentToContainer(component, MovingPlatformComponentData);				case -931447152:					var rigidbody2dprovidercomponentresolver = component as Rigidbody2DProviderComponent;					var Rigidbody2DProviderComponentData = new Rigidbody2DProviderComponentResolver().In(ref rigidbody2dprovidercomponentresolver);					return PackComponentToContainer(component, Rigidbody2DProviderComponentData);				case -1143404840:					var spawnpointtagcomponentresolver = component as SpawnPointTagComponent;					var SpawnPointTagComponentData = new SpawnPointTagComponentResolver().In(ref spawnpointtagcomponentresolver);					return PackComponentToContainer(component, SpawnPointTagComponentData);				case 597019103:					var spriterendererprovidercomponentresolver = component as SpriteRendererProviderComponent;					var SpriteRendererProviderComponentData = new SpriteRendererProviderComponentResolver().In(ref spriterendererprovidercomponentresolver);					return PackComponentToContainer(component, SpriteRendererProviderComponentData);				case -1227376375:					var velocitycomponentresolver = component as VelocityComponent;					var VelocityComponentData = new VelocityComponentResolver().In(ref velocitycomponentresolver);					return PackComponentToContainer(component, VelocityComponentData);				case 369067176:					var savepositioncomponentresolver = component as SavePositionComponent;					var SavePositionComponentData = new SavePositionComponentResolver().In(ref savepositioncomponentresolver);					return PackComponentToContainer(component, SavePositionComponentData);				case -1029564515:					var viewreferencecomponentresolver = component as ViewReferenceComponent;					var ViewReferenceComponentData = new ViewReferenceComponentResolver().In(ref viewreferencecomponentresolver);					return PackComponentToContainer(component, ViewReferenceComponentData);				case -942979946:					var actionsholdercomponentresolver = component as ActionsHolderComponent;					var ActionsHolderComponentData = new ActionsHolderComponentResolver().In(ref actionsholdercomponentresolver);					return PackComponentToContainer(component, ActionsHolderComponentData);				case 313621202:					var abilityownercomponentresolver = component as AbilityOwnerComponent;					var AbilityOwnerComponentData = new AbilityOwnerComponentResolver().In(ref abilityownercomponentresolver);					return PackComponentToContainer(component, AbilityOwnerComponentData);				case 1878456296:					var abilitypredicatecomponentresolver = component as AbilityPredicateComponent;					var AbilityPredicateComponentData = new AbilityPredicateComponentResolver().In(ref abilitypredicatecomponentresolver);					return PackComponentToContainer(component, AbilityPredicateComponentData);				case -142928435:					var actorcontaineridresolver = component as ActorContainerID;					var ActorContainerIDData = new ActorContainerIDResolver().In(ref actorcontaineridresolver);					return PackComponentToContainer(component, ActorContainerIDData);				case -803245354:					var actorprovidercomponentresolver = component as ActorProviderComponent;					var ActorProviderComponentData = new ActorProviderComponentResolver().In(ref actorprovidercomponentresolver);					return PackComponentToContainer(component, ActorProviderComponentData);				case -988064901:					var appversioncomponentresolver = component as AppVersionComponent;					var AppVersionComponentData = new AppVersionComponentResolver().In(ref appversioncomponentresolver);					return PackComponentToContainer(component, AppVersionComponentData);				case 1354058828:					var poolabletagcomponentresolver = component as PoolableTagComponent;					var PoolableTagComponentData = new PoolableTagComponentResolver().In(ref poolabletagcomponentresolver);					return PackComponentToContainer(component, PoolableTagComponentData);				case -1064941338:					var predicatescomponentresolver = component as PredicatesComponent;					var PredicatesComponentData = new PredicatesComponentResolver().In(ref predicatescomponentresolver);					return PackComponentToContainer(component, PredicatesComponentData);				case -950198728:					var animatorstatecomponentresolver = component as AnimatorStateComponent;					var AnimatorStateComponentData = new AnimatorStateComponentResolver().In(ref animatorstatecomponentresolver);					return PackComponentToContainer(component, AnimatorStateComponentData);				case -1627736277:					var countersholdercomponentresolver = component as CountersHolderComponent;					var CountersHolderComponentData = new CountersHolderComponentResolver().In(ref countersholdercomponentresolver);					return PackComponentToContainer(component, CountersHolderComponentData);				case -1713719609:					var testserializationcomponentresolver = component as TestSerializationComponent;					var TestSerializationComponentData = new TestSerializationComponentResolver().In(ref testserializationcomponentresolver);					return PackComponentToContainer(component, TestSerializationComponentData);				case 888932549:					var transformcomponentresolver = component as TransformComponent;					var TransformComponentData = new TransformComponentResolver().In(ref transformcomponentresolver);					return PackComponentToContainer(component, TransformComponentData);				case -952149029:					var aistrategycomponentresolver = component as AIStrategyComponent;					var AIStrategyComponentData = new AIStrategyComponentResolver().In(ref aistrategycomponentresolver);					return PackComponentToContainer(component, AIStrategyComponentData);				case 867896372:					var waitstatecomponentresolver = component as WaitStateComponent;					var WaitStateComponentData = new WaitStateComponentResolver().In(ref waitstatecomponentresolver);					return PackComponentToContainer(component, WaitStateComponentData);				case -1378915465:					var cachecountervaluescomponentresolver = component as CacheCounterValuesComponent;					var CacheCounterValuesComponentData = new CacheCounterValuesComponentResolver().In(ref cachecountervaluescomponentresolver);					return PackComponentToContainer(component, CacheCounterValuesComponentData);				case 1143262242:					var untilsuccessstrategynodecomponentresolver = component as UntilSuccessStrategyNodeComponent;					var UntilSuccessStrategyNodeComponentData = new UntilSuccessStrategyNodeComponentResolver().In(ref untilsuccessstrategynodecomponentresolver);					return PackComponentToContainer(component, UntilSuccessStrategyNodeComponentData);				case 2041590961:					var abilitiesholdercomponentresolver = component as AbilitiesHolderComponent;					var AbilitiesHolderComponentData = new AbilitiesHolderComponentResolver().In(ref abilitiesholdercomponentresolver);					return PackComponentToContainer(component, AbilitiesHolderComponentData);				case 274782965:					var additionalabilityindexcomponentresolver = component as AdditionalAbilityIndexComponent;					var AdditionalAbilityIndexComponentData = new AdditionalAbilityIndexComponentResolver().In(ref additionalabilityindexcomponentresolver);					return PackComponentToContainer(component, AdditionalAbilityIndexComponentData);				case 53484848:					var afterlifecompletetagcomponentresolver = component as AfterLifeCompleteTagComponent;					var AfterLifeCompleteTagComponentData = new AfterLifeCompleteTagComponentResolver().In(ref afterlifecompletetagcomponentresolver);					return PackComponentToContainer(component, AfterLifeCompleteTagComponentData);				case -88497250:					var afterlifetagcomponentresolver = component as AfterLifeTagComponent;					var AfterLifeTagComponentData = new AfterLifeTagComponentResolver().In(ref afterlifetagcomponentresolver);					return PackComponentToContainer(component, AfterLifeTagComponentData);				case -100950956:					var gamelogictagcomponentresolver = component as GameLogicTagComponent;					var GameLogicTagComponentData = new GameLogicTagComponentResolver().In(ref gamelogictagcomponentresolver);					return PackComponentToContainer(component, GameLogicTagComponentData);				case 369850288:					var inputactionscomponentresolver = component as InputActionsComponent;					var InputActionsComponentData = new InputActionsComponentResolver().In(ref inputactionscomponentresolver);					return PackComponentToContainer(component, InputActionsComponentData);				case 1776997060:					var inputlistenertagcomponentresolver = component as InputListenerTagComponent;					var InputListenerTagComponentData = new InputListenerTagComponentResolver().In(ref inputlistenertagcomponentresolver);					return PackComponentToContainer(component, InputListenerTagComponentData);				case 1004631539:					var itemtagcomponentresolver = component as ItemTagComponent;					var ItemTagComponentData = new ItemTagComponentResolver().In(ref itemtagcomponentresolver);					return PackComponentToContainer(component, ItemTagComponentData);				case 117603503:					var navmeshagentcomponentresolver = component as NavMeshAgentComponent;					var NavMeshAgentComponentData = new NavMeshAgentComponentResolver().In(ref navmeshagentcomponentresolver);					return PackComponentToContainer(component, NavMeshAgentComponentData);				case 1908646573:					var networkentitytagcomponentresolver = component as NetworkEntityTagComponent;					var NetworkEntityTagComponentData = new NetworkEntityTagComponentResolver().In(ref networkentitytagcomponentresolver);					return PackComponentToContainer(component, NetworkEntityTagComponentData);				case -1535532641:					var poolableviewsprovidercomponentresolver = component as PoolableViewsProviderComponent;					var PoolableViewsProviderComponentData = new PoolableViewsProviderComponentResolver().In(ref poolableviewsprovidercomponentresolver);					return PackComponentToContainer(component, PoolableViewsProviderComponentData);				case 265593849:					var timeprovidercomponentresolver = component as TimeProviderComponent;					var TimeProviderComponentData = new TimeProviderComponentResolver().In(ref timeprovidercomponentresolver);					return PackComponentToContainer(component, TimeProviderComponentData);				case -1162002111:					var uigrouptagcomponentresolver = component as UIGroupTagComponent;					var UIGroupTagComponentData = new UIGroupTagComponentResolver().In(ref uigrouptagcomponentresolver);					return PackComponentToContainer(component, UIGroupTagComponentData);				case 1908410989:					var uiviewreferencecomponentresolver = component as UIViewReferenceComponent;					var UIViewReferenceComponentData = new UIViewReferenceComponentResolver().In(ref uiviewreferencecomponentresolver);					return PackComponentToContainer(component, UIViewReferenceComponentData);				case -1206519595:					var unityrecttransformcomponentresolver = component as UnityRectTransformComponent;					var UnityRectTransformComponentData = new UnityRectTransformComponentResolver().In(ref unityrecttransformcomponentresolver);					return PackComponentToContainer(component, UnityRectTransformComponentData);				case -1425063609:					var unitytransformcomponentresolver = component as UnityTransformComponent;					var UnityTransformComponentData = new UnityTransformComponentResolver().In(ref unitytransformcomponentresolver);					return PackComponentToContainer(component, UnityTransformComponentData);				case 42315994:					var viewdestructiondelayedcomponentresolver = component as ViewDestructionDelayedComponent;					var ViewDestructionDelayedComponentData = new ViewDestructionDelayedComponentResolver().In(ref viewdestructiondelayedcomponentresolver);					return PackComponentToContainer(component, ViewDestructionDelayedComponentData);				case 1656499746:					var viewreferencegameobjectcomponentresolver = component as ViewReferenceGameObjectComponent;					var ViewReferenceGameObjectComponentData = new ViewReferenceGameObjectComponentResolver().In(ref viewreferencegameobjectcomponentresolver);					return PackComponentToContainer(component, ViewReferenceGameObjectComponentData);				case 1587816967:					var soundvolumecomponentresolver = component as SoundVolumeComponent;					var SoundVolumeComponentData = new SoundVolumeComponentResolver().In(ref soundvolumecomponentresolver);					return PackComponentToContainer(component, SoundVolumeComponentData);				case -1325613894:					var checktwocomponentresolver = component as CheckTwoComponent;					var CheckTwoComponentData = new CheckTwoComponentResolver().In(ref checktwocomponentresolver);					return PackComponentToContainer(component, CheckTwoComponentData);				case 815927063:					var testreactcomponentresolver = component as TestReactComponent;					var TestReactComponentData = new TestReactComponentResolver().In(ref testreactcomponentresolver);					return PackComponentToContainer(component, TestReactComponentData);				case -1150856501:					var abilitytagcomponentresolver = component as AbilityTagComponent;					var AbilityTagComponentData = new AbilityTagComponentResolver().In(ref abilitytagcomponentresolver);					return PackComponentToContainer(component, AbilityTagComponentData);				case -1856633313:					var passiveabilitytagresolver = component as PassiveAbilityTag;					var PassiveAbilityTagData = new PassiveAbilityTagResolver().In(ref passiveabilitytagresolver);					return PackComponentToContainer(component, PassiveAbilityTagData);				case -1965185654:					var scenarioanimationcomponentresolver = component as ScenarioAnimationComponent;					var ScenarioAnimationComponentData = new ScenarioAnimationComponentResolver().In(ref scenarioanimationcomponentresolver);					return PackComponentToContainer(component, ScenarioAnimationComponentData);				case 387690372:					var statecontextcomponentresolver = component as StateContextComponent;					var StateContextComponentData = new StateContextComponentResolver().In(ref statecontextcomponentresolver);					return PackComponentToContainer(component, StateContextComponentData);				case 760681168:					var statedatacomponentresolver = component as StateDataComponent;					var StateDataComponentData = new StateDataComponentResolver().In(ref statedatacomponentresolver);					return PackComponentToContainer(component, StateDataComponentData);				case 819793506:					var stateinfocomponentresolver = component as StateInfoComponent;					var StateInfoComponentData = new StateInfoComponentResolver().In(ref stateinfocomponentresolver);					return PackComponentToContainer(component, StateInfoComponentData);				case 1046176786:					var animationcheckoutsholdercomponentresolver = component as AnimationCheckOutsHolderComponent;					var AnimationCheckOutsHolderComponentData = new AnimationCheckOutsHolderComponentResolver().In(ref animationcheckoutsholdercomponentresolver);					return PackComponentToContainer(component, AnimationCheckOutsHolderComponentData);				case -2117687604:					var overrideanimatorcomponentresolver = component as OverrideAnimatorComponent;					var OverrideAnimatorComponentData = new OverrideAnimatorComponentResolver().In(ref overrideanimatorcomponentresolver);					return PackComponentToContainer(component, OverrideAnimatorComponentData);				case 1782176358:					var setupafterviewtagcomponentresolver = component as SetupAfterViewTagComponent;					var SetupAfterViewTagComponentData = new SetupAfterViewTagComponentResolver().In(ref setupafterviewtagcomponentresolver);					return PackComponentToContainer(component, SetupAfterViewTagComponentData);				case 7120005:					var viewreadytagcomponentresolver = component as ViewReadyTagComponent;					var ViewReadyTagComponentData = new ViewReadyTagComponentResolver().In(ref viewreadytagcomponentresolver);					return PackComponentToContainer(component, ViewReadyTagComponentData);				case -575221824:					var radiuscomponentresolver = component as RadiusComponent;					var RadiusComponentData = new RadiusComponentResolver().In(ref radiuscomponentresolver);					return PackComponentToContainer(component, RadiusComponentData);				case -1422875746:					var sticktagcomponentresolver = component as StickTagComponent;					var StickTagComponentData = new StickTagComponentResolver().In(ref sticktagcomponentresolver);					return PackComponentToContainer(component, StickTagComponentData);				case -1191206187:					var additionalcanvastagcomponentresolver = component as AdditionalCanvasTagComponent;					var AdditionalCanvasTagComponentData = new AdditionalCanvasTagComponentResolver().In(ref additionalcanvastagcomponentresolver);					return PackComponentToContainer(component, AdditionalCanvasTagComponentData);				case -1144719428:					var maincanvastagcomponentresolver = component as MainCanvasTagComponent;					var MainCanvasTagComponentData = new MainCanvasTagComponentResolver().In(ref maincanvastagcomponentresolver);					return PackComponentToContainer(component, MainCanvasTagComponentData);				case -2124047058:					var uitagcomponentresolver = component as UITagComponent;					var UITagComponentData = new UITagComponentResolver().In(ref uitagcomponentresolver);					return PackComponentToContainer(component, UITagComponentData);				case 956328563:					var testcomponentresolver = component as TestComponent;					var TestComponentData = new TestComponentResolver().In(ref testcomponentresolver);					return PackComponentToContainer(component, TestComponentData);				case 2004170910:					var testworldsinglecomponentresolver = component as TestWorldSingleComponent;					var TestWorldSingleComponentData = new TestWorldSingleComponentResolver().In(ref testworldsinglecomponentresolver);					return PackComponentToContainer(component, TestWorldSingleComponentData);			}			return default;		}		private void ProcessComponents(ref ResolverDataContainer dataContainerForResolving, int worldIndex)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 891356082:					var AnimationComponentresolver = MessagePackSerializer.Deserialize<AnimationComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAnimationComponent))					{						var AnimationComponentcomponent = entityOfAnimationComponent.GetOrAddComponent<AnimationComponent>();						AnimationComponentresolver.Out(ref AnimationComponentcomponent);					}					break;				case -596259457:					var AttackComponentresolver = MessagePackSerializer.Deserialize<AttackComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAttackComponent))					{						var AttackComponentcomponent = entityOfAttackComponent.GetOrAddComponent<AttackComponent>();						AttackComponentresolver.Out(ref AttackComponentcomponent);					}					break;				case -611987101:					var CameraComponentresolver = MessagePackSerializer.Deserialize<CameraComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCameraComponent))					{						var CameraComponentcomponent = entityOfCameraComponent.GetOrAddComponent<CameraComponent>();						CameraComponentresolver.Out(ref CameraComponentcomponent);					}					break;				case -1555258315:					var CameraProviderComponentresolver = MessagePackSerializer.Deserialize<CameraProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCameraProviderComponent))					{						var CameraProviderComponentcomponent = entityOfCameraProviderComponent.GetOrAddComponent<CameraProviderComponent>();						CameraProviderComponentresolver.Out(ref CameraProviderComponentcomponent);					}					break;				case 889396852:					var CharacterComponentresolver = MessagePackSerializer.Deserialize<CharacterComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCharacterComponent))					{						var CharacterComponentcomponent = entityOfCharacterComponent.GetOrAddComponent<CharacterComponent>();						CharacterComponentresolver.Out(ref CharacterComponentcomponent);					}					break;				case 37992040:					var CharacterTagComponentresolver = MessagePackSerializer.Deserialize<CharacterTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCharacterTagComponent))					{						var CharacterTagComponentcomponent = entityOfCharacterTagComponent.GetOrAddComponent<CharacterTagComponent>();						CharacterTagComponentresolver.Out(ref CharacterTagComponentcomponent);					}					break;				case -623718192:					var DamageComponentresolver = MessagePackSerializer.Deserialize<DamageComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfDamageComponent))					{						var DamageComponentcomponent = entityOfDamageComponent.GetOrAddComponent<DamageComponent>();						DamageComponentresolver.Out(ref DamageComponentcomponent);					}					break;				case -17579568:					var DefaultCharacterHolderComponentresolver = MessagePackSerializer.Deserialize<DefaultCharacterHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfDefaultCharacterHolderComponent))					{						var DefaultCharacterHolderComponentcomponent = entityOfDefaultCharacterHolderComponent.GetOrAddComponent<DefaultCharacterHolderComponent>();						DefaultCharacterHolderComponentresolver.Out(ref DefaultCharacterHolderComponentcomponent);					}					break;				case -2131779644:					var EnemyComponentresolver = MessagePackSerializer.Deserialize<EnemyComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEnemyComponent))					{						var EnemyComponentcomponent = entityOfEnemyComponent.GetOrAddComponent<EnemyComponent>();						EnemyComponentresolver.Out(ref EnemyComponentcomponent);					}					break;				case -1416715012:					var EnemyTagComponentresolver = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfEnemyTagComponent))					{						var EnemyTagComponentcomponent = entityOfEnemyTagComponent.GetOrAddComponent<EnemyTagComponent>();						EnemyTagComponentresolver.Out(ref EnemyTagComponentcomponent);					}					break;				case 1389512473:					var GroundCheckComponentresolver = MessagePackSerializer.Deserialize<GroundCheckComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfGroundCheckComponent))					{						var GroundCheckComponentcomponent = entityOfGroundCheckComponent.GetOrAddComponent<GroundCheckComponent>();						GroundCheckComponentresolver.Out(ref GroundCheckComponentcomponent);					}					break;				case -589508998:					var HealthComponentresolver = MessagePackSerializer.Deserialize<HealthComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfHealthComponent))					{						var HealthComponentcomponent = entityOfHealthComponent.GetOrAddComponent<HealthComponent>();						HealthComponentresolver.Out(ref HealthComponentcomponent);					}					break;				case -1302026474:					var MovementComponentresolver = MessagePackSerializer.Deserialize<MovementComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMovementComponent))					{						var MovementComponentcomponent = entityOfMovementComponent.GetOrAddComponent<MovementComponent>();						MovementComponentresolver.Out(ref MovementComponentcomponent);					}					break;				case -1036563749:					var MoveVectorComponentresolver = MessagePackSerializer.Deserialize<MoveVectorComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMoveVectorComponent))					{						var MoveVectorComponentcomponent = entityOfMoveVectorComponent.GetOrAddComponent<MoveVectorComponent>();						MoveVectorComponentresolver.Out(ref MoveVectorComponentcomponent);					}					break;				case -1531631635:					var MovingPlatformComponentresolver = MessagePackSerializer.Deserialize<MovingPlatformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMovingPlatformComponent))					{						var MovingPlatformComponentcomponent = entityOfMovingPlatformComponent.GetOrAddComponent<MovingPlatformComponent>();						MovingPlatformComponentresolver.Out(ref MovingPlatformComponentcomponent);					}					break;				case -931447152:					var Rigidbody2DProviderComponentresolver = MessagePackSerializer.Deserialize<Rigidbody2DProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfRigidbody2DProviderComponent))					{						var Rigidbody2DProviderComponentcomponent = entityOfRigidbody2DProviderComponent.GetOrAddComponent<Rigidbody2DProviderComponent>();						Rigidbody2DProviderComponentresolver.Out(ref Rigidbody2DProviderComponentcomponent);					}					break;				case -1143404840:					var SpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<SpawnPointTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSpawnPointTagComponent))					{						var SpawnPointTagComponentcomponent = entityOfSpawnPointTagComponent.GetOrAddComponent<SpawnPointTagComponent>();						SpawnPointTagComponentresolver.Out(ref SpawnPointTagComponentcomponent);					}					break;				case 597019103:					var SpriteRendererProviderComponentresolver = MessagePackSerializer.Deserialize<SpriteRendererProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSpriteRendererProviderComponent))					{						var SpriteRendererProviderComponentcomponent = entityOfSpriteRendererProviderComponent.GetOrAddComponent<SpriteRendererProviderComponent>();						SpriteRendererProviderComponentresolver.Out(ref SpriteRendererProviderComponentcomponent);					}					break;				case -1227376375:					var VelocityComponentresolver = MessagePackSerializer.Deserialize<VelocityComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfVelocityComponent))					{						var VelocityComponentcomponent = entityOfVelocityComponent.GetOrAddComponent<VelocityComponent>();						VelocityComponentresolver.Out(ref VelocityComponentcomponent);					}					break;				case 369067176:					var SavePositionComponentresolver = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSavePositionComponent))					{						var SavePositionComponentcomponent = entityOfSavePositionComponent.GetOrAddComponent<SavePositionComponent>();						SavePositionComponentresolver.Out(ref SavePositionComponentcomponent);					}					break;				case -1029564515:					var ViewReferenceComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewReferenceComponent))					{						var ViewReferenceComponentcomponent = entityOfViewReferenceComponent.GetOrAddComponent<ViewReferenceComponent>();						ViewReferenceComponentresolver.Out(ref ViewReferenceComponentcomponent);					}					break;				case -942979946:					var ActionsHolderComponentresolver = MessagePackSerializer.Deserialize<ActionsHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfActionsHolderComponent))					{						var ActionsHolderComponentcomponent = entityOfActionsHolderComponent.GetOrAddComponent<ActionsHolderComponent>();						ActionsHolderComponentresolver.Out(ref ActionsHolderComponentcomponent);					}					break;				case 313621202:					var AbilityOwnerComponentresolver = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityOwnerComponent))					{						var AbilityOwnerComponentcomponent = entityOfAbilityOwnerComponent.GetOrAddComponent<AbilityOwnerComponent>();						AbilityOwnerComponentresolver.Out(ref AbilityOwnerComponentcomponent);					}					break;				case 1878456296:					var AbilityPredicateComponentresolver = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityPredicateComponent))					{						var AbilityPredicateComponentcomponent = entityOfAbilityPredicateComponent.GetOrAddComponent<AbilityPredicateComponent>();						AbilityPredicateComponentresolver.Out(ref AbilityPredicateComponentcomponent);					}					break;				case -142928435:					var ActorContainerIDresolver = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfActorContainerID))					{						var ActorContainerIDcomponent = entityOfActorContainerID.GetOrAddComponent<ActorContainerID>();						ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					}					break;				case -803245354:					var ActorProviderComponentresolver = MessagePackSerializer.Deserialize<ActorProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfActorProviderComponent))					{						var ActorProviderComponentcomponent = entityOfActorProviderComponent.GetOrAddComponent<ActorProviderComponent>();						ActorProviderComponentresolver.Out(ref ActorProviderComponentcomponent);					}					break;				case -988064901:					var AppVersionComponentresolver = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAppVersionComponent))					{						var AppVersionComponentcomponent = entityOfAppVersionComponent.GetOrAddComponent<AppVersionComponent>();						AppVersionComponentresolver.Out(ref AppVersionComponentcomponent);					}					break;				case 1354058828:					var PoolableTagComponentresolver = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPoolableTagComponent))					{						var PoolableTagComponentcomponent = entityOfPoolableTagComponent.GetOrAddComponent<PoolableTagComponent>();						PoolableTagComponentresolver.Out(ref PoolableTagComponentcomponent);					}					break;				case -1064941338:					var PredicatesComponentresolver = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPredicatesComponent))					{						var PredicatesComponentcomponent = entityOfPredicatesComponent.GetOrAddComponent<PredicatesComponent>();						PredicatesComponentresolver.Out(ref PredicatesComponentcomponent);					}					break;				case -950198728:					var AnimatorStateComponentresolver = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAnimatorStateComponent))					{						var AnimatorStateComponentcomponent = entityOfAnimatorStateComponent.GetOrAddComponent<AnimatorStateComponent>();						AnimatorStateComponentresolver.Out(ref AnimatorStateComponentcomponent);					}					break;				case -1627736277:					var CountersHolderComponentresolver = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCountersHolderComponent))					{						var CountersHolderComponentcomponent = entityOfCountersHolderComponent.GetOrAddComponent<CountersHolderComponent>();						CountersHolderComponentresolver.Out(ref CountersHolderComponentcomponent);					}					break;				case -1713719609:					var TestSerializationComponentresolver = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTestSerializationComponent))					{						var TestSerializationComponentcomponent = entityOfTestSerializationComponent.GetOrAddComponent<TestSerializationComponent>();						TestSerializationComponentresolver.Out(ref TestSerializationComponentcomponent);					}					break;				case 888932549:					var TransformComponentresolver = MessagePackSerializer.Deserialize<TransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTransformComponent))					{						var TransformComponentcomponent = entityOfTransformComponent.GetOrAddComponent<TransformComponent>();						TransformComponentresolver.Out(ref TransformComponentcomponent);					}					break;				case -952149029:					var AIStrategyComponentresolver = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAIStrategyComponent))					{						var AIStrategyComponentcomponent = entityOfAIStrategyComponent.GetOrAddComponent<AIStrategyComponent>();						AIStrategyComponentresolver.Out(ref AIStrategyComponentcomponent);					}					break;				case 867896372:					var WaitStateComponentresolver = MessagePackSerializer.Deserialize<WaitStateComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfWaitStateComponent))					{						var WaitStateComponentcomponent = entityOfWaitStateComponent.GetOrAddComponent<WaitStateComponent>();						WaitStateComponentresolver.Out(ref WaitStateComponentcomponent);					}					break;				case -1378915465:					var CacheCounterValuesComponentresolver = MessagePackSerializer.Deserialize<CacheCounterValuesComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCacheCounterValuesComponent))					{						var CacheCounterValuesComponentcomponent = entityOfCacheCounterValuesComponent.GetOrAddComponent<CacheCounterValuesComponent>();						CacheCounterValuesComponentresolver.Out(ref CacheCounterValuesComponentcomponent);					}					break;				case 1143262242:					var UntilSuccessStrategyNodeComponentresolver = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUntilSuccessStrategyNodeComponent))					{						var UntilSuccessStrategyNodeComponentcomponent = entityOfUntilSuccessStrategyNodeComponent.GetOrAddComponent<UntilSuccessStrategyNodeComponent>();						UntilSuccessStrategyNodeComponentresolver.Out(ref UntilSuccessStrategyNodeComponentcomponent);					}					break;				case 2041590961:					var AbilitiesHolderComponentresolver = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilitiesHolderComponent))					{						var AbilitiesHolderComponentcomponent = entityOfAbilitiesHolderComponent.GetOrAddComponent<AbilitiesHolderComponent>();						AbilitiesHolderComponentresolver.Out(ref AbilitiesHolderComponentcomponent);					}					break;				case 274782965:					var AdditionalAbilityIndexComponentresolver = MessagePackSerializer.Deserialize<AdditionalAbilityIndexComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAdditionalAbilityIndexComponent))					{						var AdditionalAbilityIndexComponentcomponent = entityOfAdditionalAbilityIndexComponent.GetOrAddComponent<AdditionalAbilityIndexComponent>();						AdditionalAbilityIndexComponentresolver.Out(ref AdditionalAbilityIndexComponentcomponent);					}					break;				case 53484848:					var AfterLifeCompleteTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAfterLifeCompleteTagComponent))					{						var AfterLifeCompleteTagComponentcomponent = entityOfAfterLifeCompleteTagComponent.GetOrAddComponent<AfterLifeCompleteTagComponent>();						AfterLifeCompleteTagComponentresolver.Out(ref AfterLifeCompleteTagComponentcomponent);					}					break;				case -88497250:					var AfterLifeTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAfterLifeTagComponent))					{						var AfterLifeTagComponentcomponent = entityOfAfterLifeTagComponent.GetOrAddComponent<AfterLifeTagComponent>();						AfterLifeTagComponentresolver.Out(ref AfterLifeTagComponentcomponent);					}					break;				case -100950956:					var GameLogicTagComponentresolver = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfGameLogicTagComponent))					{						var GameLogicTagComponentcomponent = entityOfGameLogicTagComponent.GetOrAddComponent<GameLogicTagComponent>();						GameLogicTagComponentresolver.Out(ref GameLogicTagComponentcomponent);					}					break;				case 369850288:					var InputActionsComponentresolver = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfInputActionsComponent))					{						var InputActionsComponentcomponent = entityOfInputActionsComponent.GetOrAddComponent<InputActionsComponent>();						InputActionsComponentresolver.Out(ref InputActionsComponentcomponent);					}					break;				case 1776997060:					var InputListenerTagComponentresolver = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfInputListenerTagComponent))					{						var InputListenerTagComponentcomponent = entityOfInputListenerTagComponent.GetOrAddComponent<InputListenerTagComponent>();						InputListenerTagComponentresolver.Out(ref InputListenerTagComponentcomponent);					}					break;				case 1004631539:					var ItemTagComponentresolver = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfItemTagComponent))					{						var ItemTagComponentcomponent = entityOfItemTagComponent.GetOrAddComponent<ItemTagComponent>();						ItemTagComponentresolver.Out(ref ItemTagComponentcomponent);					}					break;				case 117603503:					var NavMeshAgentComponentresolver = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfNavMeshAgentComponent))					{						var NavMeshAgentComponentcomponent = entityOfNavMeshAgentComponent.GetOrAddComponent<NavMeshAgentComponent>();						NavMeshAgentComponentresolver.Out(ref NavMeshAgentComponentcomponent);					}					break;				case 1908646573:					var NetworkEntityTagComponentresolver = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfNetworkEntityTagComponent))					{						var NetworkEntityTagComponentcomponent = entityOfNetworkEntityTagComponent.GetOrAddComponent<NetworkEntityTagComponent>();						NetworkEntityTagComponentresolver.Out(ref NetworkEntityTagComponentcomponent);					}					break;				case -1535532641:					var PoolableViewsProviderComponentresolver = MessagePackSerializer.Deserialize<PoolableViewsProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPoolableViewsProviderComponent))					{						var PoolableViewsProviderComponentcomponent = entityOfPoolableViewsProviderComponent.GetOrAddComponent<PoolableViewsProviderComponent>();						PoolableViewsProviderComponentresolver.Out(ref PoolableViewsProviderComponentcomponent);					}					break;				case 265593849:					var TimeProviderComponentresolver = MessagePackSerializer.Deserialize<TimeProviderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTimeProviderComponent))					{						var TimeProviderComponentcomponent = entityOfTimeProviderComponent.GetOrAddComponent<TimeProviderComponent>();						TimeProviderComponentresolver.Out(ref TimeProviderComponentcomponent);					}					break;				case -1162002111:					var UIGroupTagComponentresolver = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUIGroupTagComponent))					{						var UIGroupTagComponentcomponent = entityOfUIGroupTagComponent.GetOrAddComponent<UIGroupTagComponent>();						UIGroupTagComponentresolver.Out(ref UIGroupTagComponentcomponent);					}					break;				case 1908410989:					var UIViewReferenceComponentresolver = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUIViewReferenceComponent))					{						var UIViewReferenceComponentcomponent = entityOfUIViewReferenceComponent.GetOrAddComponent<UIViewReferenceComponent>();						UIViewReferenceComponentresolver.Out(ref UIViewReferenceComponentcomponent);					}					break;				case -1206519595:					var UnityRectTransformComponentresolver = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUnityRectTransformComponent))					{						var UnityRectTransformComponentcomponent = entityOfUnityRectTransformComponent.GetOrAddComponent<UnityRectTransformComponent>();						UnityRectTransformComponentresolver.Out(ref UnityRectTransformComponentcomponent);					}					break;				case -1425063609:					var UnityTransformComponentresolver = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUnityTransformComponent))					{						var UnityTransformComponentcomponent = entityOfUnityTransformComponent.GetOrAddComponent<UnityTransformComponent>();						UnityTransformComponentresolver.Out(ref UnityTransformComponentcomponent);					}					break;				case 42315994:					var ViewDestructionDelayedComponentresolver = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewDestructionDelayedComponent))					{						var ViewDestructionDelayedComponentcomponent = entityOfViewDestructionDelayedComponent.GetOrAddComponent<ViewDestructionDelayedComponent>();						ViewDestructionDelayedComponentresolver.Out(ref ViewDestructionDelayedComponentcomponent);					}					break;				case 1656499746:					var ViewReferenceGameObjectComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewReferenceGameObjectComponent))					{						var ViewReferenceGameObjectComponentcomponent = entityOfViewReferenceGameObjectComponent.GetOrAddComponent<ViewReferenceGameObjectComponent>();						ViewReferenceGameObjectComponentresolver.Out(ref ViewReferenceGameObjectComponentcomponent);					}					break;				case 1587816967:					var SoundVolumeComponentresolver = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSoundVolumeComponent))					{						var SoundVolumeComponentcomponent = entityOfSoundVolumeComponent.GetOrAddComponent<SoundVolumeComponent>();						SoundVolumeComponentresolver.Out(ref SoundVolumeComponentcomponent);					}					break;				case -1325613894:					var CheckTwoComponentresolver = MessagePackSerializer.Deserialize<CheckTwoComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfCheckTwoComponent))					{						var CheckTwoComponentcomponent = entityOfCheckTwoComponent.GetOrAddComponent<CheckTwoComponent>();						CheckTwoComponentresolver.Out(ref CheckTwoComponentcomponent);					}					break;				case 815927063:					var TestReactComponentresolver = MessagePackSerializer.Deserialize<TestReactComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTestReactComponent))					{						var TestReactComponentcomponent = entityOfTestReactComponent.GetOrAddComponent<TestReactComponent>();						TestReactComponentresolver.Out(ref TestReactComponentcomponent);					}					break;				case -1150856501:					var AbilityTagComponentresolver = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAbilityTagComponent))					{						var AbilityTagComponentcomponent = entityOfAbilityTagComponent.GetOrAddComponent<AbilityTagComponent>();						AbilityTagComponentresolver.Out(ref AbilityTagComponentcomponent);					}					break;				case -1856633313:					var PassiveAbilityTagresolver = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfPassiveAbilityTag))					{						var PassiveAbilityTagcomponent = entityOfPassiveAbilityTag.GetOrAddComponent<PassiveAbilityTag>();						PassiveAbilityTagresolver.Out(ref PassiveAbilityTagcomponent);					}					break;				case -1965185654:					var ScenarioAnimationComponentresolver = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfScenarioAnimationComponent))					{						var ScenarioAnimationComponentcomponent = entityOfScenarioAnimationComponent.GetOrAddComponent<ScenarioAnimationComponent>();						ScenarioAnimationComponentresolver.Out(ref ScenarioAnimationComponentcomponent);					}					break;				case 387690372:					var StateContextComponentresolver = MessagePackSerializer.Deserialize<StateContextComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateContextComponent))					{						var StateContextComponentcomponent = entityOfStateContextComponent.GetOrAddComponent<StateContextComponent>();						StateContextComponentresolver.Out(ref StateContextComponentcomponent);					}					break;				case 760681168:					var StateDataComponentresolver = MessagePackSerializer.Deserialize<StateDataComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateDataComponent))					{						var StateDataComponentcomponent = entityOfStateDataComponent.GetOrAddComponent<StateDataComponent>();						StateDataComponentresolver.Out(ref StateDataComponentcomponent);					}					break;				case 819793506:					var StateInfoComponentresolver = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStateInfoComponent))					{						var StateInfoComponentcomponent = entityOfStateInfoComponent.GetOrAddComponent<StateInfoComponent>();						StateInfoComponentresolver.Out(ref StateInfoComponentcomponent);					}					break;				case 1046176786:					var AnimationCheckOutsHolderComponentresolver = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAnimationCheckOutsHolderComponent))					{						var AnimationCheckOutsHolderComponentcomponent = entityOfAnimationCheckOutsHolderComponent.GetOrAddComponent<AnimationCheckOutsHolderComponent>();						AnimationCheckOutsHolderComponentresolver.Out(ref AnimationCheckOutsHolderComponentcomponent);					}					break;				case -2117687604:					var OverrideAnimatorComponentresolver = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfOverrideAnimatorComponent))					{						var OverrideAnimatorComponentcomponent = entityOfOverrideAnimatorComponent.GetOrAddComponent<OverrideAnimatorComponent>();						OverrideAnimatorComponentresolver.Out(ref OverrideAnimatorComponentcomponent);					}					break;				case 1782176358:					var SetupAfterViewTagComponentresolver = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfSetupAfterViewTagComponent))					{						var SetupAfterViewTagComponentcomponent = entityOfSetupAfterViewTagComponent.GetOrAddComponent<SetupAfterViewTagComponent>();						SetupAfterViewTagComponentresolver.Out(ref SetupAfterViewTagComponentcomponent);					}					break;				case 7120005:					var ViewReadyTagComponentresolver = MessagePackSerializer.Deserialize<ViewReadyTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfViewReadyTagComponent))					{						var ViewReadyTagComponentcomponent = entityOfViewReadyTagComponent.GetOrAddComponent<ViewReadyTagComponent>();						ViewReadyTagComponentresolver.Out(ref ViewReadyTagComponentcomponent);					}					break;				case -575221824:					var RadiusComponentresolver = MessagePackSerializer.Deserialize<RadiusComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfRadiusComponent))					{						var RadiusComponentcomponent = entityOfRadiusComponent.GetOrAddComponent<RadiusComponent>();						RadiusComponentresolver.Out(ref RadiusComponentcomponent);					}					break;				case -1422875746:					var StickTagComponentresolver = MessagePackSerializer.Deserialize<StickTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfStickTagComponent))					{						var StickTagComponentcomponent = entityOfStickTagComponent.GetOrAddComponent<StickTagComponent>();						StickTagComponentresolver.Out(ref StickTagComponentcomponent);					}					break;				case -1191206187:					var AdditionalCanvasTagComponentresolver = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfAdditionalCanvasTagComponent))					{						var AdditionalCanvasTagComponentcomponent = entityOfAdditionalCanvasTagComponent.GetOrAddComponent<AdditionalCanvasTagComponent>();						AdditionalCanvasTagComponentresolver.Out(ref AdditionalCanvasTagComponentcomponent);					}					break;				case -1144719428:					var MainCanvasTagComponentresolver = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfMainCanvasTagComponent))					{						var MainCanvasTagComponentcomponent = entityOfMainCanvasTagComponent.GetOrAddComponent<MainCanvasTagComponent>();						MainCanvasTagComponentresolver.Out(ref MainCanvasTagComponentcomponent);					}					break;				case -2124047058:					var UITagComponentresolver = MessagePackSerializer.Deserialize<UITagComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfUITagComponent))					{						var UITagComponentcomponent = entityOfUITagComponent.GetOrAddComponent<UITagComponent>();						UITagComponentresolver.Out(ref UITagComponentcomponent);					}					break;				case 956328563:					var TestComponentresolver = MessagePackSerializer.Deserialize<TestComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTestComponent))					{						var TestComponentcomponent = entityOfTestComponent.GetOrAddComponent<TestComponent>();						TestComponentresolver.Out(ref TestComponentcomponent);					}					break;				case 2004170910:					var TestWorldSingleComponentresolver = MessagePackSerializer.Deserialize<TestWorldSingleComponentResolver>(dataContainerForResolving.Data);					if (EntityManager.TryGetEntityByID(dataContainerForResolving.EntityGuid, out var entityOfTestWorldSingleComponent))					{						var TestWorldSingleComponentcomponent = entityOfTestWorldSingleComponent.GetOrAddComponent<TestWorldSingleComponent>();						TestWorldSingleComponentresolver.Out(ref TestWorldSingleComponentcomponent);					}					break;			}		}		private IComponent GetComponentFromContainerFuncRealisation(ResolverDataContainer resolverDataContainer)		{			switch (resolverDataContainer.TypeHashCode)			{				case 891356082:					var AnimationComponentnew = new AnimationComponent();					var AnimationComponentdata = MessagePackSerializer.Deserialize<AnimationComponentResolver>(resolverDataContainer.Data);					AnimationComponentdata.Out(ref AnimationComponentnew);					return AnimationComponentnew;				case -596259457:					var AttackComponentnew = new AttackComponent();					var AttackComponentdata = MessagePackSerializer.Deserialize<AttackComponentResolver>(resolverDataContainer.Data);					AttackComponentdata.Out(ref AttackComponentnew);					return AttackComponentnew;				case -611987101:					var CameraComponentnew = new CameraComponent();					var CameraComponentdata = MessagePackSerializer.Deserialize<CameraComponentResolver>(resolverDataContainer.Data);					CameraComponentdata.Out(ref CameraComponentnew);					return CameraComponentnew;				case -1555258315:					var CameraProviderComponentnew = new CameraProviderComponent();					var CameraProviderComponentdata = MessagePackSerializer.Deserialize<CameraProviderComponentResolver>(resolverDataContainer.Data);					CameraProviderComponentdata.Out(ref CameraProviderComponentnew);					return CameraProviderComponentnew;				case 889396852:					var CharacterComponentnew = new CharacterComponent();					var CharacterComponentdata = MessagePackSerializer.Deserialize<CharacterComponentResolver>(resolverDataContainer.Data);					CharacterComponentdata.Out(ref CharacterComponentnew);					return CharacterComponentnew;				case 37992040:					var CharacterTagComponentnew = new CharacterTagComponent();					var CharacterTagComponentdata = MessagePackSerializer.Deserialize<CharacterTagComponentResolver>(resolverDataContainer.Data);					CharacterTagComponentdata.Out(ref CharacterTagComponentnew);					return CharacterTagComponentnew;				case -623718192:					var DamageComponentnew = new DamageComponent();					var DamageComponentdata = MessagePackSerializer.Deserialize<DamageComponentResolver>(resolverDataContainer.Data);					DamageComponentdata.Out(ref DamageComponentnew);					return DamageComponentnew;				case -17579568:					var DefaultCharacterHolderComponentnew = new DefaultCharacterHolderComponent();					var DefaultCharacterHolderComponentdata = MessagePackSerializer.Deserialize<DefaultCharacterHolderComponentResolver>(resolverDataContainer.Data);					DefaultCharacterHolderComponentdata.Out(ref DefaultCharacterHolderComponentnew);					return DefaultCharacterHolderComponentnew;				case -2131779644:					var EnemyComponentnew = new EnemyComponent();					var EnemyComponentdata = MessagePackSerializer.Deserialize<EnemyComponentResolver>(resolverDataContainer.Data);					EnemyComponentdata.Out(ref EnemyComponentnew);					return EnemyComponentnew;				case -1416715012:					var EnemyTagComponentnew = new EnemyTagComponent();					var EnemyTagComponentdata = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(resolverDataContainer.Data);					EnemyTagComponentdata.Out(ref EnemyTagComponentnew);					return EnemyTagComponentnew;				case 1389512473:					var GroundCheckComponentnew = new GroundCheckComponent();					var GroundCheckComponentdata = MessagePackSerializer.Deserialize<GroundCheckComponentResolver>(resolverDataContainer.Data);					GroundCheckComponentdata.Out(ref GroundCheckComponentnew);					return GroundCheckComponentnew;				case -589508998:					var HealthComponentnew = new HealthComponent();					var HealthComponentdata = MessagePackSerializer.Deserialize<HealthComponentResolver>(resolverDataContainer.Data);					HealthComponentdata.Out(ref HealthComponentnew);					return HealthComponentnew;				case -1302026474:					var MovementComponentnew = new MovementComponent();					var MovementComponentdata = MessagePackSerializer.Deserialize<MovementComponentResolver>(resolverDataContainer.Data);					MovementComponentdata.Out(ref MovementComponentnew);					return MovementComponentnew;				case -1036563749:					var MoveVectorComponentnew = new MoveVectorComponent();					var MoveVectorComponentdata = MessagePackSerializer.Deserialize<MoveVectorComponentResolver>(resolverDataContainer.Data);					MoveVectorComponentdata.Out(ref MoveVectorComponentnew);					return MoveVectorComponentnew;				case -1531631635:					var MovingPlatformComponentnew = new MovingPlatformComponent();					var MovingPlatformComponentdata = MessagePackSerializer.Deserialize<MovingPlatformComponentResolver>(resolverDataContainer.Data);					MovingPlatformComponentdata.Out(ref MovingPlatformComponentnew);					return MovingPlatformComponentnew;				case -931447152:					var Rigidbody2DProviderComponentnew = new Rigidbody2DProviderComponent();					var Rigidbody2DProviderComponentdata = MessagePackSerializer.Deserialize<Rigidbody2DProviderComponentResolver>(resolverDataContainer.Data);					Rigidbody2DProviderComponentdata.Out(ref Rigidbody2DProviderComponentnew);					return Rigidbody2DProviderComponentnew;				case -1143404840:					var SpawnPointTagComponentnew = new SpawnPointTagComponent();					var SpawnPointTagComponentdata = MessagePackSerializer.Deserialize<SpawnPointTagComponentResolver>(resolverDataContainer.Data);					SpawnPointTagComponentdata.Out(ref SpawnPointTagComponentnew);					return SpawnPointTagComponentnew;				case 597019103:					var SpriteRendererProviderComponentnew = new SpriteRendererProviderComponent();					var SpriteRendererProviderComponentdata = MessagePackSerializer.Deserialize<SpriteRendererProviderComponentResolver>(resolverDataContainer.Data);					SpriteRendererProviderComponentdata.Out(ref SpriteRendererProviderComponentnew);					return SpriteRendererProviderComponentnew;				case -1227376375:					var VelocityComponentnew = new VelocityComponent();					var VelocityComponentdata = MessagePackSerializer.Deserialize<VelocityComponentResolver>(resolverDataContainer.Data);					VelocityComponentdata.Out(ref VelocityComponentnew);					return VelocityComponentnew;				case 369067176:					var SavePositionComponentnew = new SavePositionComponent();					var SavePositionComponentdata = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(resolverDataContainer.Data);					SavePositionComponentdata.Out(ref SavePositionComponentnew);					return SavePositionComponentnew;				case -1029564515:					var ViewReferenceComponentnew = new ViewReferenceComponent();					var ViewReferenceComponentdata = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(resolverDataContainer.Data);					ViewReferenceComponentdata.Out(ref ViewReferenceComponentnew);					return ViewReferenceComponentnew;				case -942979946:					var ActionsHolderComponentnew = new ActionsHolderComponent();					var ActionsHolderComponentdata = MessagePackSerializer.Deserialize<ActionsHolderComponentResolver>(resolverDataContainer.Data);					ActionsHolderComponentdata.Out(ref ActionsHolderComponentnew);					return ActionsHolderComponentnew;				case 313621202:					var AbilityOwnerComponentnew = new AbilityOwnerComponent();					var AbilityOwnerComponentdata = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(resolverDataContainer.Data);					AbilityOwnerComponentdata.Out(ref AbilityOwnerComponentnew);					return AbilityOwnerComponentnew;				case 1878456296:					var AbilityPredicateComponentnew = new AbilityPredicateComponent();					var AbilityPredicateComponentdata = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(resolverDataContainer.Data);					AbilityPredicateComponentdata.Out(ref AbilityPredicateComponentnew);					return AbilityPredicateComponentnew;				case -142928435:					var ActorContainerIDnew = new ActorContainerID();					var ActorContainerIDdata = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(resolverDataContainer.Data);					ActorContainerIDdata.Out(ref ActorContainerIDnew);					return ActorContainerIDnew;				case -803245354:					var ActorProviderComponentnew = new ActorProviderComponent();					var ActorProviderComponentdata = MessagePackSerializer.Deserialize<ActorProviderComponentResolver>(resolverDataContainer.Data);					ActorProviderComponentdata.Out(ref ActorProviderComponentnew);					return ActorProviderComponentnew;				case -988064901:					var AppVersionComponentnew = new AppVersionComponent();					var AppVersionComponentdata = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(resolverDataContainer.Data);					AppVersionComponentdata.Out(ref AppVersionComponentnew);					return AppVersionComponentnew;				case 1354058828:					var PoolableTagComponentnew = new PoolableTagComponent();					var PoolableTagComponentdata = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(resolverDataContainer.Data);					PoolableTagComponentdata.Out(ref PoolableTagComponentnew);					return PoolableTagComponentnew;				case -1064941338:					var PredicatesComponentnew = new PredicatesComponent();					var PredicatesComponentdata = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(resolverDataContainer.Data);					PredicatesComponentdata.Out(ref PredicatesComponentnew);					return PredicatesComponentnew;				case -950198728:					var AnimatorStateComponentnew = new AnimatorStateComponent();					var AnimatorStateComponentdata = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(resolverDataContainer.Data);					AnimatorStateComponentdata.Out(ref AnimatorStateComponentnew);					return AnimatorStateComponentnew;				case -1627736277:					var CountersHolderComponentnew = new CountersHolderComponent();					var CountersHolderComponentdata = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(resolverDataContainer.Data);					CountersHolderComponentdata.Out(ref CountersHolderComponentnew);					return CountersHolderComponentnew;				case -1713719609:					var TestSerializationComponentnew = new TestSerializationComponent();					var TestSerializationComponentdata = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(resolverDataContainer.Data);					TestSerializationComponentdata.Out(ref TestSerializationComponentnew);					return TestSerializationComponentnew;				case 888932549:					var TransformComponentnew = new TransformComponent();					var TransformComponentdata = MessagePackSerializer.Deserialize<TransformComponentResolver>(resolverDataContainer.Data);					TransformComponentdata.Out(ref TransformComponentnew);					return TransformComponentnew;				case -952149029:					var AIStrategyComponentnew = new AIStrategyComponent();					var AIStrategyComponentdata = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(resolverDataContainer.Data);					AIStrategyComponentdata.Out(ref AIStrategyComponentnew);					return AIStrategyComponentnew;				case 867896372:					var WaitStateComponentnew = new WaitStateComponent();					var WaitStateComponentdata = MessagePackSerializer.Deserialize<WaitStateComponentResolver>(resolverDataContainer.Data);					WaitStateComponentdata.Out(ref WaitStateComponentnew);					return WaitStateComponentnew;				case -1378915465:					var CacheCounterValuesComponentnew = new CacheCounterValuesComponent();					var CacheCounterValuesComponentdata = MessagePackSerializer.Deserialize<CacheCounterValuesComponentResolver>(resolverDataContainer.Data);					CacheCounterValuesComponentdata.Out(ref CacheCounterValuesComponentnew);					return CacheCounterValuesComponentnew;				case 1143262242:					var UntilSuccessStrategyNodeComponentnew = new UntilSuccessStrategyNodeComponent();					var UntilSuccessStrategyNodeComponentdata = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(resolverDataContainer.Data);					UntilSuccessStrategyNodeComponentdata.Out(ref UntilSuccessStrategyNodeComponentnew);					return UntilSuccessStrategyNodeComponentnew;				case 2041590961:					var AbilitiesHolderComponentnew = new AbilitiesHolderComponent();					var AbilitiesHolderComponentdata = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(resolverDataContainer.Data);					AbilitiesHolderComponentdata.Out(ref AbilitiesHolderComponentnew);					return AbilitiesHolderComponentnew;				case 274782965:					var AdditionalAbilityIndexComponentnew = new AdditionalAbilityIndexComponent();					var AdditionalAbilityIndexComponentdata = MessagePackSerializer.Deserialize<AdditionalAbilityIndexComponentResolver>(resolverDataContainer.Data);					AdditionalAbilityIndexComponentdata.Out(ref AdditionalAbilityIndexComponentnew);					return AdditionalAbilityIndexComponentnew;				case 53484848:					var AfterLifeCompleteTagComponentnew = new AfterLifeCompleteTagComponent();					var AfterLifeCompleteTagComponentdata = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(resolverDataContainer.Data);					AfterLifeCompleteTagComponentdata.Out(ref AfterLifeCompleteTagComponentnew);					return AfterLifeCompleteTagComponentnew;				case -88497250:					var AfterLifeTagComponentnew = new AfterLifeTagComponent();					var AfterLifeTagComponentdata = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(resolverDataContainer.Data);					AfterLifeTagComponentdata.Out(ref AfterLifeTagComponentnew);					return AfterLifeTagComponentnew;				case -100950956:					var GameLogicTagComponentnew = new GameLogicTagComponent();					var GameLogicTagComponentdata = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(resolverDataContainer.Data);					GameLogicTagComponentdata.Out(ref GameLogicTagComponentnew);					return GameLogicTagComponentnew;				case 369850288:					var InputActionsComponentnew = new InputActionsComponent();					var InputActionsComponentdata = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(resolverDataContainer.Data);					InputActionsComponentdata.Out(ref InputActionsComponentnew);					return InputActionsComponentnew;				case 1776997060:					var InputListenerTagComponentnew = new InputListenerTagComponent();					var InputListenerTagComponentdata = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(resolverDataContainer.Data);					InputListenerTagComponentdata.Out(ref InputListenerTagComponentnew);					return InputListenerTagComponentnew;				case 1004631539:					var ItemTagComponentnew = new ItemTagComponent();					var ItemTagComponentdata = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(resolverDataContainer.Data);					ItemTagComponentdata.Out(ref ItemTagComponentnew);					return ItemTagComponentnew;				case 117603503:					var NavMeshAgentComponentnew = new NavMeshAgentComponent();					var NavMeshAgentComponentdata = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(resolverDataContainer.Data);					NavMeshAgentComponentdata.Out(ref NavMeshAgentComponentnew);					return NavMeshAgentComponentnew;				case 1908646573:					var NetworkEntityTagComponentnew = new NetworkEntityTagComponent();					var NetworkEntityTagComponentdata = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(resolverDataContainer.Data);					NetworkEntityTagComponentdata.Out(ref NetworkEntityTagComponentnew);					return NetworkEntityTagComponentnew;				case -1535532641:					var PoolableViewsProviderComponentnew = new PoolableViewsProviderComponent();					var PoolableViewsProviderComponentdata = MessagePackSerializer.Deserialize<PoolableViewsProviderComponentResolver>(resolverDataContainer.Data);					PoolableViewsProviderComponentdata.Out(ref PoolableViewsProviderComponentnew);					return PoolableViewsProviderComponentnew;				case 265593849:					var TimeProviderComponentnew = new TimeProviderComponent();					var TimeProviderComponentdata = MessagePackSerializer.Deserialize<TimeProviderComponentResolver>(resolverDataContainer.Data);					TimeProviderComponentdata.Out(ref TimeProviderComponentnew);					return TimeProviderComponentnew;				case -1162002111:					var UIGroupTagComponentnew = new UIGroupTagComponent();					var UIGroupTagComponentdata = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(resolverDataContainer.Data);					UIGroupTagComponentdata.Out(ref UIGroupTagComponentnew);					return UIGroupTagComponentnew;				case 1908410989:					var UIViewReferenceComponentnew = new UIViewReferenceComponent();					var UIViewReferenceComponentdata = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(resolverDataContainer.Data);					UIViewReferenceComponentdata.Out(ref UIViewReferenceComponentnew);					return UIViewReferenceComponentnew;				case -1206519595:					var UnityRectTransformComponentnew = new UnityRectTransformComponent();					var UnityRectTransformComponentdata = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(resolverDataContainer.Data);					UnityRectTransformComponentdata.Out(ref UnityRectTransformComponentnew);					return UnityRectTransformComponentnew;				case -1425063609:					var UnityTransformComponentnew = new UnityTransformComponent();					var UnityTransformComponentdata = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(resolverDataContainer.Data);					UnityTransformComponentdata.Out(ref UnityTransformComponentnew);					return UnityTransformComponentnew;				case 42315994:					var ViewDestructionDelayedComponentnew = new ViewDestructionDelayedComponent();					var ViewDestructionDelayedComponentdata = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(resolverDataContainer.Data);					ViewDestructionDelayedComponentdata.Out(ref ViewDestructionDelayedComponentnew);					return ViewDestructionDelayedComponentnew;				case 1656499746:					var ViewReferenceGameObjectComponentnew = new ViewReferenceGameObjectComponent();					var ViewReferenceGameObjectComponentdata = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(resolverDataContainer.Data);					ViewReferenceGameObjectComponentdata.Out(ref ViewReferenceGameObjectComponentnew);					return ViewReferenceGameObjectComponentnew;				case 1587816967:					var SoundVolumeComponentnew = new SoundVolumeComponent();					var SoundVolumeComponentdata = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(resolverDataContainer.Data);					SoundVolumeComponentdata.Out(ref SoundVolumeComponentnew);					return SoundVolumeComponentnew;				case -1325613894:					var CheckTwoComponentnew = new CheckTwoComponent();					var CheckTwoComponentdata = MessagePackSerializer.Deserialize<CheckTwoComponentResolver>(resolverDataContainer.Data);					CheckTwoComponentdata.Out(ref CheckTwoComponentnew);					return CheckTwoComponentnew;				case 815927063:					var TestReactComponentnew = new TestReactComponent();					var TestReactComponentdata = MessagePackSerializer.Deserialize<TestReactComponentResolver>(resolverDataContainer.Data);					TestReactComponentdata.Out(ref TestReactComponentnew);					return TestReactComponentnew;				case -1150856501:					var AbilityTagComponentnew = new AbilityTagComponent();					var AbilityTagComponentdata = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(resolverDataContainer.Data);					AbilityTagComponentdata.Out(ref AbilityTagComponentnew);					return AbilityTagComponentnew;				case -1856633313:					var PassiveAbilityTagnew = new PassiveAbilityTag();					var PassiveAbilityTagdata = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(resolverDataContainer.Data);					PassiveAbilityTagdata.Out(ref PassiveAbilityTagnew);					return PassiveAbilityTagnew;				case -1965185654:					var ScenarioAnimationComponentnew = new ScenarioAnimationComponent();					var ScenarioAnimationComponentdata = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(resolverDataContainer.Data);					ScenarioAnimationComponentdata.Out(ref ScenarioAnimationComponentnew);					return ScenarioAnimationComponentnew;				case 387690372:					var StateContextComponentnew = new StateContextComponent();					var StateContextComponentdata = MessagePackSerializer.Deserialize<StateContextComponentResolver>(resolverDataContainer.Data);					StateContextComponentdata.Out(ref StateContextComponentnew);					return StateContextComponentnew;				case 760681168:					var StateDataComponentnew = new StateDataComponent();					var StateDataComponentdata = MessagePackSerializer.Deserialize<StateDataComponentResolver>(resolverDataContainer.Data);					StateDataComponentdata.Out(ref StateDataComponentnew);					return StateDataComponentnew;				case 819793506:					var StateInfoComponentnew = new StateInfoComponent();					var StateInfoComponentdata = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(resolverDataContainer.Data);					StateInfoComponentdata.Out(ref StateInfoComponentnew);					return StateInfoComponentnew;				case 1046176786:					var AnimationCheckOutsHolderComponentnew = new AnimationCheckOutsHolderComponent();					var AnimationCheckOutsHolderComponentdata = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(resolverDataContainer.Data);					AnimationCheckOutsHolderComponentdata.Out(ref AnimationCheckOutsHolderComponentnew);					return AnimationCheckOutsHolderComponentnew;				case -2117687604:					var OverrideAnimatorComponentnew = new OverrideAnimatorComponent();					var OverrideAnimatorComponentdata = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(resolverDataContainer.Data);					OverrideAnimatorComponentdata.Out(ref OverrideAnimatorComponentnew);					return OverrideAnimatorComponentnew;				case 1782176358:					var SetupAfterViewTagComponentnew = new SetupAfterViewTagComponent();					var SetupAfterViewTagComponentdata = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(resolverDataContainer.Data);					SetupAfterViewTagComponentdata.Out(ref SetupAfterViewTagComponentnew);					return SetupAfterViewTagComponentnew;				case 7120005:					var ViewReadyTagComponentnew = new ViewReadyTagComponent();					var ViewReadyTagComponentdata = MessagePackSerializer.Deserialize<ViewReadyTagComponentResolver>(resolverDataContainer.Data);					ViewReadyTagComponentdata.Out(ref ViewReadyTagComponentnew);					return ViewReadyTagComponentnew;				case -575221824:					var RadiusComponentnew = new RadiusComponent();					var RadiusComponentdata = MessagePackSerializer.Deserialize<RadiusComponentResolver>(resolverDataContainer.Data);					RadiusComponentdata.Out(ref RadiusComponentnew);					return RadiusComponentnew;				case -1422875746:					var StickTagComponentnew = new StickTagComponent();					var StickTagComponentdata = MessagePackSerializer.Deserialize<StickTagComponentResolver>(resolverDataContainer.Data);					StickTagComponentdata.Out(ref StickTagComponentnew);					return StickTagComponentnew;				case -1191206187:					var AdditionalCanvasTagComponentnew = new AdditionalCanvasTagComponent();					var AdditionalCanvasTagComponentdata = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(resolverDataContainer.Data);					AdditionalCanvasTagComponentdata.Out(ref AdditionalCanvasTagComponentnew);					return AdditionalCanvasTagComponentnew;				case -1144719428:					var MainCanvasTagComponentnew = new MainCanvasTagComponent();					var MainCanvasTagComponentdata = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(resolverDataContainer.Data);					MainCanvasTagComponentdata.Out(ref MainCanvasTagComponentnew);					return MainCanvasTagComponentnew;				case -2124047058:					var UITagComponentnew = new UITagComponent();					var UITagComponentdata = MessagePackSerializer.Deserialize<UITagComponentResolver>(resolverDataContainer.Data);					UITagComponentdata.Out(ref UITagComponentnew);					return UITagComponentnew;				case 956328563:					var TestComponentnew = new TestComponent();					var TestComponentdata = MessagePackSerializer.Deserialize<TestComponentResolver>(resolverDataContainer.Data);					TestComponentdata.Out(ref TestComponentnew);					return TestComponentnew;				case 2004170910:					var TestWorldSingleComponentnew = new TestWorldSingleComponent();					var TestWorldSingleComponentdata = MessagePackSerializer.Deserialize<TestWorldSingleComponentResolver>(resolverDataContainer.Data);					TestWorldSingleComponentdata.Out(ref TestWorldSingleComponentnew);					return TestWorldSingleComponentnew;			}				return default;		}		private void ProcessResolverContainerRealisation(ref ResolverDataContainer dataContainerForResolving, ref Entity entity)		{			switch (dataContainerForResolving.TypeHashCode)			{				case 891356082:					var AnimationComponentresolver = MessagePackSerializer.Deserialize<AnimationComponentResolver>(dataContainerForResolving.Data);					var AnimationComponentcomponent = entity.GetOrAddComponent<AnimationComponent>();					AnimationComponentresolver.Out(ref AnimationComponentcomponent);					break;				case -596259457:					var AttackComponentresolver = MessagePackSerializer.Deserialize<AttackComponentResolver>(dataContainerForResolving.Data);					var AttackComponentcomponent = entity.GetOrAddComponent<AttackComponent>();					AttackComponentresolver.Out(ref AttackComponentcomponent);					break;				case -611987101:					var CameraComponentresolver = MessagePackSerializer.Deserialize<CameraComponentResolver>(dataContainerForResolving.Data);					var CameraComponentcomponent = entity.GetOrAddComponent<CameraComponent>();					CameraComponentresolver.Out(ref CameraComponentcomponent);					break;				case -1555258315:					var CameraProviderComponentresolver = MessagePackSerializer.Deserialize<CameraProviderComponentResolver>(dataContainerForResolving.Data);					var CameraProviderComponentcomponent = entity.GetOrAddComponent<CameraProviderComponent>();					CameraProviderComponentresolver.Out(ref CameraProviderComponentcomponent);					break;				case 889396852:					var CharacterComponentresolver = MessagePackSerializer.Deserialize<CharacterComponentResolver>(dataContainerForResolving.Data);					var CharacterComponentcomponent = entity.GetOrAddComponent<CharacterComponent>();					CharacterComponentresolver.Out(ref CharacterComponentcomponent);					break;				case 37992040:					var CharacterTagComponentresolver = MessagePackSerializer.Deserialize<CharacterTagComponentResolver>(dataContainerForResolving.Data);					var CharacterTagComponentcomponent = entity.GetOrAddComponent<CharacterTagComponent>();					CharacterTagComponentresolver.Out(ref CharacterTagComponentcomponent);					break;				case -623718192:					var DamageComponentresolver = MessagePackSerializer.Deserialize<DamageComponentResolver>(dataContainerForResolving.Data);					var DamageComponentcomponent = entity.GetOrAddComponent<DamageComponent>();					DamageComponentresolver.Out(ref DamageComponentcomponent);					break;				case -17579568:					var DefaultCharacterHolderComponentresolver = MessagePackSerializer.Deserialize<DefaultCharacterHolderComponentResolver>(dataContainerForResolving.Data);					var DefaultCharacterHolderComponentcomponent = entity.GetOrAddComponent<DefaultCharacterHolderComponent>();					DefaultCharacterHolderComponentresolver.Out(ref DefaultCharacterHolderComponentcomponent);					break;				case -2131779644:					var EnemyComponentresolver = MessagePackSerializer.Deserialize<EnemyComponentResolver>(dataContainerForResolving.Data);					var EnemyComponentcomponent = entity.GetOrAddComponent<EnemyComponent>();					EnemyComponentresolver.Out(ref EnemyComponentcomponent);					break;				case -1416715012:					var EnemyTagComponentresolver = MessagePackSerializer.Deserialize<EnemyTagComponentResolver>(dataContainerForResolving.Data);					var EnemyTagComponentcomponent = entity.GetOrAddComponent<EnemyTagComponent>();					EnemyTagComponentresolver.Out(ref EnemyTagComponentcomponent);					break;				case 1389512473:					var GroundCheckComponentresolver = MessagePackSerializer.Deserialize<GroundCheckComponentResolver>(dataContainerForResolving.Data);					var GroundCheckComponentcomponent = entity.GetOrAddComponent<GroundCheckComponent>();					GroundCheckComponentresolver.Out(ref GroundCheckComponentcomponent);					break;				case -589508998:					var HealthComponentresolver = MessagePackSerializer.Deserialize<HealthComponentResolver>(dataContainerForResolving.Data);					var HealthComponentcomponent = entity.GetOrAddComponent<HealthComponent>();					HealthComponentresolver.Out(ref HealthComponentcomponent);					break;				case -1302026474:					var MovementComponentresolver = MessagePackSerializer.Deserialize<MovementComponentResolver>(dataContainerForResolving.Data);					var MovementComponentcomponent = entity.GetOrAddComponent<MovementComponent>();					MovementComponentresolver.Out(ref MovementComponentcomponent);					break;				case -1036563749:					var MoveVectorComponentresolver = MessagePackSerializer.Deserialize<MoveVectorComponentResolver>(dataContainerForResolving.Data);					var MoveVectorComponentcomponent = entity.GetOrAddComponent<MoveVectorComponent>();					MoveVectorComponentresolver.Out(ref MoveVectorComponentcomponent);					break;				case -1531631635:					var MovingPlatformComponentresolver = MessagePackSerializer.Deserialize<MovingPlatformComponentResolver>(dataContainerForResolving.Data);					var MovingPlatformComponentcomponent = entity.GetOrAddComponent<MovingPlatformComponent>();					MovingPlatformComponentresolver.Out(ref MovingPlatformComponentcomponent);					break;				case -931447152:					var Rigidbody2DProviderComponentresolver = MessagePackSerializer.Deserialize<Rigidbody2DProviderComponentResolver>(dataContainerForResolving.Data);					var Rigidbody2DProviderComponentcomponent = entity.GetOrAddComponent<Rigidbody2DProviderComponent>();					Rigidbody2DProviderComponentresolver.Out(ref Rigidbody2DProviderComponentcomponent);					break;				case -1143404840:					var SpawnPointTagComponentresolver = MessagePackSerializer.Deserialize<SpawnPointTagComponentResolver>(dataContainerForResolving.Data);					var SpawnPointTagComponentcomponent = entity.GetOrAddComponent<SpawnPointTagComponent>();					SpawnPointTagComponentresolver.Out(ref SpawnPointTagComponentcomponent);					break;				case 597019103:					var SpriteRendererProviderComponentresolver = MessagePackSerializer.Deserialize<SpriteRendererProviderComponentResolver>(dataContainerForResolving.Data);					var SpriteRendererProviderComponentcomponent = entity.GetOrAddComponent<SpriteRendererProviderComponent>();					SpriteRendererProviderComponentresolver.Out(ref SpriteRendererProviderComponentcomponent);					break;				case -1227376375:					var VelocityComponentresolver = MessagePackSerializer.Deserialize<VelocityComponentResolver>(dataContainerForResolving.Data);					var VelocityComponentcomponent = entity.GetOrAddComponent<VelocityComponent>();					VelocityComponentresolver.Out(ref VelocityComponentcomponent);					break;				case 369067176:					var SavePositionComponentresolver = MessagePackSerializer.Deserialize<SavePositionComponentResolver>(dataContainerForResolving.Data);					var SavePositionComponentcomponent = entity.GetOrAddComponent<SavePositionComponent>();					SavePositionComponentresolver.Out(ref SavePositionComponentcomponent);					break;				case -1029564515:					var ViewReferenceComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceComponentResolver>(dataContainerForResolving.Data);					var ViewReferenceComponentcomponent = entity.GetOrAddComponent<ViewReferenceComponent>();					ViewReferenceComponentresolver.Out(ref ViewReferenceComponentcomponent);					break;				case -942979946:					var ActionsHolderComponentresolver = MessagePackSerializer.Deserialize<ActionsHolderComponentResolver>(dataContainerForResolving.Data);					var ActionsHolderComponentcomponent = entity.GetOrAddComponent<ActionsHolderComponent>();					ActionsHolderComponentresolver.Out(ref ActionsHolderComponentcomponent);					break;				case 313621202:					var AbilityOwnerComponentresolver = MessagePackSerializer.Deserialize<AbilityOwnerComponentResolver>(dataContainerForResolving.Data);					var AbilityOwnerComponentcomponent = entity.GetOrAddComponent<AbilityOwnerComponent>();					AbilityOwnerComponentresolver.Out(ref AbilityOwnerComponentcomponent);					break;				case 1878456296:					var AbilityPredicateComponentresolver = MessagePackSerializer.Deserialize<AbilityPredicateComponentResolver>(dataContainerForResolving.Data);					var AbilityPredicateComponentcomponent = entity.GetOrAddComponent<AbilityPredicateComponent>();					AbilityPredicateComponentresolver.Out(ref AbilityPredicateComponentcomponent);					break;				case -142928435:					var ActorContainerIDresolver = MessagePackSerializer.Deserialize<ActorContainerIDResolver>(dataContainerForResolving.Data);					var ActorContainerIDcomponent = entity.GetOrAddComponent<ActorContainerID>();					ActorContainerIDresolver.Out(ref ActorContainerIDcomponent);					break;				case -803245354:					var ActorProviderComponentresolver = MessagePackSerializer.Deserialize<ActorProviderComponentResolver>(dataContainerForResolving.Data);					var ActorProviderComponentcomponent = entity.GetOrAddComponent<ActorProviderComponent>();					ActorProviderComponentresolver.Out(ref ActorProviderComponentcomponent);					break;				case -988064901:					var AppVersionComponentresolver = MessagePackSerializer.Deserialize<AppVersionComponentResolver>(dataContainerForResolving.Data);					var AppVersionComponentcomponent = entity.GetOrAddComponent<AppVersionComponent>();					AppVersionComponentresolver.Out(ref AppVersionComponentcomponent);					break;				case 1354058828:					var PoolableTagComponentresolver = MessagePackSerializer.Deserialize<PoolableTagComponentResolver>(dataContainerForResolving.Data);					var PoolableTagComponentcomponent = entity.GetOrAddComponent<PoolableTagComponent>();					PoolableTagComponentresolver.Out(ref PoolableTagComponentcomponent);					break;				case -1064941338:					var PredicatesComponentresolver = MessagePackSerializer.Deserialize<PredicatesComponentResolver>(dataContainerForResolving.Data);					var PredicatesComponentcomponent = entity.GetOrAddComponent<PredicatesComponent>();					PredicatesComponentresolver.Out(ref PredicatesComponentcomponent);					break;				case -950198728:					var AnimatorStateComponentresolver = MessagePackSerializer.Deserialize<AnimatorStateComponentResolver>(dataContainerForResolving.Data);					var AnimatorStateComponentcomponent = entity.GetOrAddComponent<AnimatorStateComponent>();					AnimatorStateComponentresolver.Out(ref AnimatorStateComponentcomponent);					break;				case -1627736277:					var CountersHolderComponentresolver = MessagePackSerializer.Deserialize<CountersHolderComponentResolver>(dataContainerForResolving.Data);					var CountersHolderComponentcomponent = entity.GetOrAddComponent<CountersHolderComponent>();					CountersHolderComponentresolver.Out(ref CountersHolderComponentcomponent);					break;				case -1713719609:					var TestSerializationComponentresolver = MessagePackSerializer.Deserialize<TestSerializationComponentResolver>(dataContainerForResolving.Data);					var TestSerializationComponentcomponent = entity.GetOrAddComponent<TestSerializationComponent>();					TestSerializationComponentresolver.Out(ref TestSerializationComponentcomponent);					break;				case 888932549:					var TransformComponentresolver = MessagePackSerializer.Deserialize<TransformComponentResolver>(dataContainerForResolving.Data);					var TransformComponentcomponent = entity.GetOrAddComponent<TransformComponent>();					TransformComponentresolver.Out(ref TransformComponentcomponent);					break;				case -952149029:					var AIStrategyComponentresolver = MessagePackSerializer.Deserialize<AIStrategyComponentResolver>(dataContainerForResolving.Data);					var AIStrategyComponentcomponent = entity.GetOrAddComponent<AIStrategyComponent>();					AIStrategyComponentresolver.Out(ref AIStrategyComponentcomponent);					break;				case 867896372:					var WaitStateComponentresolver = MessagePackSerializer.Deserialize<WaitStateComponentResolver>(dataContainerForResolving.Data);					var WaitStateComponentcomponent = entity.GetOrAddComponent<WaitStateComponent>();					WaitStateComponentresolver.Out(ref WaitStateComponentcomponent);					break;				case -1378915465:					var CacheCounterValuesComponentresolver = MessagePackSerializer.Deserialize<CacheCounterValuesComponentResolver>(dataContainerForResolving.Data);					var CacheCounterValuesComponentcomponent = entity.GetOrAddComponent<CacheCounterValuesComponent>();					CacheCounterValuesComponentresolver.Out(ref CacheCounterValuesComponentcomponent);					break;				case 1143262242:					var UntilSuccessStrategyNodeComponentresolver = MessagePackSerializer.Deserialize<UntilSuccessStrategyNodeComponentResolver>(dataContainerForResolving.Data);					var UntilSuccessStrategyNodeComponentcomponent = entity.GetOrAddComponent<UntilSuccessStrategyNodeComponent>();					UntilSuccessStrategyNodeComponentresolver.Out(ref UntilSuccessStrategyNodeComponentcomponent);					break;				case 2041590961:					var AbilitiesHolderComponentresolver = MessagePackSerializer.Deserialize<AbilitiesHolderComponentResolver>(dataContainerForResolving.Data);					var AbilitiesHolderComponentcomponent = entity.GetOrAddComponent<AbilitiesHolderComponent>();					AbilitiesHolderComponentresolver.Out(ref AbilitiesHolderComponentcomponent);					break;				case 274782965:					var AdditionalAbilityIndexComponentresolver = MessagePackSerializer.Deserialize<AdditionalAbilityIndexComponentResolver>(dataContainerForResolving.Data);					var AdditionalAbilityIndexComponentcomponent = entity.GetOrAddComponent<AdditionalAbilityIndexComponent>();					AdditionalAbilityIndexComponentresolver.Out(ref AdditionalAbilityIndexComponentcomponent);					break;				case 53484848:					var AfterLifeCompleteTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeCompleteTagComponentResolver>(dataContainerForResolving.Data);					var AfterLifeCompleteTagComponentcomponent = entity.GetOrAddComponent<AfterLifeCompleteTagComponent>();					AfterLifeCompleteTagComponentresolver.Out(ref AfterLifeCompleteTagComponentcomponent);					break;				case -88497250:					var AfterLifeTagComponentresolver = MessagePackSerializer.Deserialize<AfterLifeTagComponentResolver>(dataContainerForResolving.Data);					var AfterLifeTagComponentcomponent = entity.GetOrAddComponent<AfterLifeTagComponent>();					AfterLifeTagComponentresolver.Out(ref AfterLifeTagComponentcomponent);					break;				case -100950956:					var GameLogicTagComponentresolver = MessagePackSerializer.Deserialize<GameLogicTagComponentResolver>(dataContainerForResolving.Data);					var GameLogicTagComponentcomponent = entity.GetOrAddComponent<GameLogicTagComponent>();					GameLogicTagComponentresolver.Out(ref GameLogicTagComponentcomponent);					break;				case 369850288:					var InputActionsComponentresolver = MessagePackSerializer.Deserialize<InputActionsComponentResolver>(dataContainerForResolving.Data);					var InputActionsComponentcomponent = entity.GetOrAddComponent<InputActionsComponent>();					InputActionsComponentresolver.Out(ref InputActionsComponentcomponent);					break;				case 1776997060:					var InputListenerTagComponentresolver = MessagePackSerializer.Deserialize<InputListenerTagComponentResolver>(dataContainerForResolving.Data);					var InputListenerTagComponentcomponent = entity.GetOrAddComponent<InputListenerTagComponent>();					InputListenerTagComponentresolver.Out(ref InputListenerTagComponentcomponent);					break;				case 1004631539:					var ItemTagComponentresolver = MessagePackSerializer.Deserialize<ItemTagComponentResolver>(dataContainerForResolving.Data);					var ItemTagComponentcomponent = entity.GetOrAddComponent<ItemTagComponent>();					ItemTagComponentresolver.Out(ref ItemTagComponentcomponent);					break;				case 117603503:					var NavMeshAgentComponentresolver = MessagePackSerializer.Deserialize<NavMeshAgentComponentResolver>(dataContainerForResolving.Data);					var NavMeshAgentComponentcomponent = entity.GetOrAddComponent<NavMeshAgentComponent>();					NavMeshAgentComponentresolver.Out(ref NavMeshAgentComponentcomponent);					break;				case 1908646573:					var NetworkEntityTagComponentresolver = MessagePackSerializer.Deserialize<NetworkEntityTagComponentResolver>(dataContainerForResolving.Data);					var NetworkEntityTagComponentcomponent = entity.GetOrAddComponent<NetworkEntityTagComponent>();					NetworkEntityTagComponentresolver.Out(ref NetworkEntityTagComponentcomponent);					break;				case -1535532641:					var PoolableViewsProviderComponentresolver = MessagePackSerializer.Deserialize<PoolableViewsProviderComponentResolver>(dataContainerForResolving.Data);					var PoolableViewsProviderComponentcomponent = entity.GetOrAddComponent<PoolableViewsProviderComponent>();					PoolableViewsProviderComponentresolver.Out(ref PoolableViewsProviderComponentcomponent);					break;				case 265593849:					var TimeProviderComponentresolver = MessagePackSerializer.Deserialize<TimeProviderComponentResolver>(dataContainerForResolving.Data);					var TimeProviderComponentcomponent = entity.GetOrAddComponent<TimeProviderComponent>();					TimeProviderComponentresolver.Out(ref TimeProviderComponentcomponent);					break;				case -1162002111:					var UIGroupTagComponentresolver = MessagePackSerializer.Deserialize<UIGroupTagComponentResolver>(dataContainerForResolving.Data);					var UIGroupTagComponentcomponent = entity.GetOrAddComponent<UIGroupTagComponent>();					UIGroupTagComponentresolver.Out(ref UIGroupTagComponentcomponent);					break;				case 1908410989:					var UIViewReferenceComponentresolver = MessagePackSerializer.Deserialize<UIViewReferenceComponentResolver>(dataContainerForResolving.Data);					var UIViewReferenceComponentcomponent = entity.GetOrAddComponent<UIViewReferenceComponent>();					UIViewReferenceComponentresolver.Out(ref UIViewReferenceComponentcomponent);					break;				case -1206519595:					var UnityRectTransformComponentresolver = MessagePackSerializer.Deserialize<UnityRectTransformComponentResolver>(dataContainerForResolving.Data);					var UnityRectTransformComponentcomponent = entity.GetOrAddComponent<UnityRectTransformComponent>();					UnityRectTransformComponentresolver.Out(ref UnityRectTransformComponentcomponent);					break;				case -1425063609:					var UnityTransformComponentresolver = MessagePackSerializer.Deserialize<UnityTransformComponentResolver>(dataContainerForResolving.Data);					var UnityTransformComponentcomponent = entity.GetOrAddComponent<UnityTransformComponent>();					UnityTransformComponentresolver.Out(ref UnityTransformComponentcomponent);					break;				case 42315994:					var ViewDestructionDelayedComponentresolver = MessagePackSerializer.Deserialize<ViewDestructionDelayedComponentResolver>(dataContainerForResolving.Data);					var ViewDestructionDelayedComponentcomponent = entity.GetOrAddComponent<ViewDestructionDelayedComponent>();					ViewDestructionDelayedComponentresolver.Out(ref ViewDestructionDelayedComponentcomponent);					break;				case 1656499746:					var ViewReferenceGameObjectComponentresolver = MessagePackSerializer.Deserialize<ViewReferenceGameObjectComponentResolver>(dataContainerForResolving.Data);					var ViewReferenceGameObjectComponentcomponent = entity.GetOrAddComponent<ViewReferenceGameObjectComponent>();					ViewReferenceGameObjectComponentresolver.Out(ref ViewReferenceGameObjectComponentcomponent);					break;				case 1587816967:					var SoundVolumeComponentresolver = MessagePackSerializer.Deserialize<SoundVolumeComponentResolver>(dataContainerForResolving.Data);					var SoundVolumeComponentcomponent = entity.GetOrAddComponent<SoundVolumeComponent>();					SoundVolumeComponentresolver.Out(ref SoundVolumeComponentcomponent);					break;				case -1325613894:					var CheckTwoComponentresolver = MessagePackSerializer.Deserialize<CheckTwoComponentResolver>(dataContainerForResolving.Data);					var CheckTwoComponentcomponent = entity.GetOrAddComponent<CheckTwoComponent>();					CheckTwoComponentresolver.Out(ref CheckTwoComponentcomponent);					break;				case 815927063:					var TestReactComponentresolver = MessagePackSerializer.Deserialize<TestReactComponentResolver>(dataContainerForResolving.Data);					var TestReactComponentcomponent = entity.GetOrAddComponent<TestReactComponent>();					TestReactComponentresolver.Out(ref TestReactComponentcomponent);					break;				case -1150856501:					var AbilityTagComponentresolver = MessagePackSerializer.Deserialize<AbilityTagComponentResolver>(dataContainerForResolving.Data);					var AbilityTagComponentcomponent = entity.GetOrAddComponent<AbilityTagComponent>();					AbilityTagComponentresolver.Out(ref AbilityTagComponentcomponent);					break;				case -1856633313:					var PassiveAbilityTagresolver = MessagePackSerializer.Deserialize<PassiveAbilityTagResolver>(dataContainerForResolving.Data);					var PassiveAbilityTagcomponent = entity.GetOrAddComponent<PassiveAbilityTag>();					PassiveAbilityTagresolver.Out(ref PassiveAbilityTagcomponent);					break;				case -1965185654:					var ScenarioAnimationComponentresolver = MessagePackSerializer.Deserialize<ScenarioAnimationComponentResolver>(dataContainerForResolving.Data);					var ScenarioAnimationComponentcomponent = entity.GetOrAddComponent<ScenarioAnimationComponent>();					ScenarioAnimationComponentresolver.Out(ref ScenarioAnimationComponentcomponent);					break;				case 387690372:					var StateContextComponentresolver = MessagePackSerializer.Deserialize<StateContextComponentResolver>(dataContainerForResolving.Data);					var StateContextComponentcomponent = entity.GetOrAddComponent<StateContextComponent>();					StateContextComponentresolver.Out(ref StateContextComponentcomponent);					break;				case 760681168:					var StateDataComponentresolver = MessagePackSerializer.Deserialize<StateDataComponentResolver>(dataContainerForResolving.Data);					var StateDataComponentcomponent = entity.GetOrAddComponent<StateDataComponent>();					StateDataComponentresolver.Out(ref StateDataComponentcomponent);					break;				case 819793506:					var StateInfoComponentresolver = MessagePackSerializer.Deserialize<StateInfoComponentResolver>(dataContainerForResolving.Data);					var StateInfoComponentcomponent = entity.GetOrAddComponent<StateInfoComponent>();					StateInfoComponentresolver.Out(ref StateInfoComponentcomponent);					break;				case 1046176786:					var AnimationCheckOutsHolderComponentresolver = MessagePackSerializer.Deserialize<AnimationCheckOutsHolderComponentResolver>(dataContainerForResolving.Data);					var AnimationCheckOutsHolderComponentcomponent = entity.GetOrAddComponent<AnimationCheckOutsHolderComponent>();					AnimationCheckOutsHolderComponentresolver.Out(ref AnimationCheckOutsHolderComponentcomponent);					break;				case -2117687604:					var OverrideAnimatorComponentresolver = MessagePackSerializer.Deserialize<OverrideAnimatorComponentResolver>(dataContainerForResolving.Data);					var OverrideAnimatorComponentcomponent = entity.GetOrAddComponent<OverrideAnimatorComponent>();					OverrideAnimatorComponentresolver.Out(ref OverrideAnimatorComponentcomponent);					break;				case 1782176358:					var SetupAfterViewTagComponentresolver = MessagePackSerializer.Deserialize<SetupAfterViewTagComponentResolver>(dataContainerForResolving.Data);					var SetupAfterViewTagComponentcomponent = entity.GetOrAddComponent<SetupAfterViewTagComponent>();					SetupAfterViewTagComponentresolver.Out(ref SetupAfterViewTagComponentcomponent);					break;				case 7120005:					var ViewReadyTagComponentresolver = MessagePackSerializer.Deserialize<ViewReadyTagComponentResolver>(dataContainerForResolving.Data);					var ViewReadyTagComponentcomponent = entity.GetOrAddComponent<ViewReadyTagComponent>();					ViewReadyTagComponentresolver.Out(ref ViewReadyTagComponentcomponent);					break;				case -575221824:					var RadiusComponentresolver = MessagePackSerializer.Deserialize<RadiusComponentResolver>(dataContainerForResolving.Data);					var RadiusComponentcomponent = entity.GetOrAddComponent<RadiusComponent>();					RadiusComponentresolver.Out(ref RadiusComponentcomponent);					break;				case -1422875746:					var StickTagComponentresolver = MessagePackSerializer.Deserialize<StickTagComponentResolver>(dataContainerForResolving.Data);					var StickTagComponentcomponent = entity.GetOrAddComponent<StickTagComponent>();					StickTagComponentresolver.Out(ref StickTagComponentcomponent);					break;				case -1191206187:					var AdditionalCanvasTagComponentresolver = MessagePackSerializer.Deserialize<AdditionalCanvasTagComponentResolver>(dataContainerForResolving.Data);					var AdditionalCanvasTagComponentcomponent = entity.GetOrAddComponent<AdditionalCanvasTagComponent>();					AdditionalCanvasTagComponentresolver.Out(ref AdditionalCanvasTagComponentcomponent);					break;				case -1144719428:					var MainCanvasTagComponentresolver = MessagePackSerializer.Deserialize<MainCanvasTagComponentResolver>(dataContainerForResolving.Data);					var MainCanvasTagComponentcomponent = entity.GetOrAddComponent<MainCanvasTagComponent>();					MainCanvasTagComponentresolver.Out(ref MainCanvasTagComponentcomponent);					break;				case -2124047058:					var UITagComponentresolver = MessagePackSerializer.Deserialize<UITagComponentResolver>(dataContainerForResolving.Data);					var UITagComponentcomponent = entity.GetOrAddComponent<UITagComponent>();					UITagComponentresolver.Out(ref UITagComponentcomponent);					break;				case 956328563:					var TestComponentresolver = MessagePackSerializer.Deserialize<TestComponentResolver>(dataContainerForResolving.Data);					var TestComponentcomponent = entity.GetOrAddComponent<TestComponent>();					TestComponentresolver.Out(ref TestComponentcomponent);					break;				case 2004170910:					var TestWorldSingleComponentresolver = MessagePackSerializer.Deserialize<TestWorldSingleComponentResolver>(dataContainerForResolving.Data);					var TestWorldSingleComponentcomponent = entity.GetOrAddComponent<TestWorldSingleComponent>();					TestWorldSingleComponentresolver.Out(ref TestWorldSingleComponentcomponent);					break;			}		}	}}